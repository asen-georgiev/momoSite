[{"/home/asen/Workspace/momoDesignSite/momo-site/src/index.js":"1","/home/asen/Workspace/momoDesignSite/momo-site/src/reportWebVitals.js":"2","/home/asen/Workspace/momoDesignSite/momo-site/src/App.js":"3","/home/asen/Workspace/momoDesignSite/momo-site/src/services/userLoginService.js":"4","/home/asen/Workspace/momoDesignSite/momo-site/src/services/adminLoginService.js":"5","/home/asen/Workspace/momoDesignSite/momo-site/src/components/navigation.jsx":"6","/home/asen/Workspace/momoDesignSite/momo-site/src/pages/products.jsx":"7","/home/asen/Workspace/momoDesignSite/momo-site/src/pages/basket.jsx":"8","/home/asen/Workspace/momoDesignSite/momo-site/src/pages/user/registerUserFormUsr.jsx":"9","/home/asen/Workspace/momoDesignSite/momo-site/src/pages/user/userLoginForm.jsx":"10","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/admin/registerAdminForm.jsx":"11","/home/asen/Workspace/momoDesignSite/momo-site/src/pages/user/userProfile.jsx":"12","/home/asen/Workspace/momoDesignSite/momo-site/src/pages/contacts/contacts.jsx":"13","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/admin/adminLoginForm.jsx":"14","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/admin/adminPanel.jsx":"15","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/admin/updateAdminForm.jsx":"16","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/admin/allAdminsList.jsx":"17","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/user/allUsersList.jsx":"18","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/user/updateUserForm.jsx":"19","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/user/registerUserForm.jsx":"20","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/images/imagesUpload.jsx":"21","/home/asen/Workspace/momoDesignSite/momo-site/src/services/httpService.js":"22","/home/asen/Workspace/momoDesignSite/momo-site/src/services/adminService.js":"23","/home/asen/Workspace/momoDesignSite/momo-site/src/services/imgService.js":"24","/home/asen/Workspace/momoDesignSite/momo-site/src/services/userService.js":"25","/home/asen/Workspace/momoDesignSite/momo-site/src/services/emailService.js":"26","/home/asen/Workspace/momoDesignSite/momo-site/src/components/product.jsx":"27","/home/asen/Workspace/momoDesignSite/momo-site/src/components/contactsMailForm.jsx":"28","/home/asen/Workspace/momoDesignSite/momo-site/src/components/userDeleteAlert.jsx":"29","/home/asen/Workspace/momoDesignSite/momo-site/src/components/usercard.jsx":"30","/home/asen/Workspace/momoDesignSite/momo-site/src/components/imagesUploadForm.jsx":"31","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/emails/allEmailsList.jsx":"32","/home/asen/Workspace/momoDesignSite/momo-site/src/components/trTdTable.jsx":"33","/home/asen/Workspace/momoDesignSite/momo-site/src/components/navLinkComp.jsx":"34","/home/asen/Workspace/momoDesignSite/momo-site/src/pages/user/updateUserFormUsr.jsx":"35","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/bios/registerBioForm.jsx":"36","/home/asen/Workspace/momoDesignSite/momo-site/src/services/bioService.js":"37","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/bios/allBiosList.jsx":"38","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/bios/updateBioForm.jsx":"39","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/blogs/registerBlogForm.jsx":"40","/home/asen/Workspace/momoDesignSite/momo-site/src/services/blogService.js":"41","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/blogs/allBlogsList.jsx":"42","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/blogs/updateBlogForm.jsx":"43","/home/asen/Workspace/momoDesignSite/momo-site/src/pages/blog/blog.jsx":"44","/home/asen/Workspace/momoDesignSite/momo-site/src/pages/blog/blogDetails.jsx":"45","/home/asen/Workspace/momoDesignSite/momo-site/src/services/commentService.js":"46","/home/asen/Workspace/momoDesignSite/momo-site/src/components/blogCard.jsx":"47","/home/asen/Workspace/momoDesignSite/momo-site/src/components/blogComments.jsx":"48","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/comments/AllCommentsList.jsx":"49","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/designs/registerDesignForm.jsx":"50","/home/asen/Workspace/momoDesignSite/momo-site/src/services/designService.js":"51","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/designs/allDesignsList.jsx":"52","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/designs/updateDesignForm.jsx":"53"},{"size":773,"mtime":1612780866716,"results":"54","hashOfConfig":"55"},{"size":362,"mtime":1607679022000,"results":"56","hashOfConfig":"55"},{"size":5501,"mtime":1614593918408,"results":"57","hashOfConfig":"55"},{"size":928,"mtime":1612606119893,"results":"58","hashOfConfig":"55"},{"size":993,"mtime":1614673318402,"results":"59","hashOfConfig":"55"},{"size":1500,"mtime":1614690924883,"results":"60","hashOfConfig":"55"},{"size":1425,"mtime":1610572344000,"results":"61","hashOfConfig":"55"},{"size":1545,"mtime":1610572344000,"results":"62","hashOfConfig":"55"},{"size":13226,"mtime":1610694353000,"results":"63","hashOfConfig":"55"},{"size":8222,"mtime":1614245933904,"results":"64","hashOfConfig":"55"},{"size":6674,"mtime":1609152992000,"results":"65","hashOfConfig":"55"},{"size":4099,"mtime":1614247389070,"results":"66","hashOfConfig":"55"},{"size":3767,"mtime":1610987097000,"results":"67","hashOfConfig":"55"},{"size":7775,"mtime":1614688552402,"results":"68","hashOfConfig":"55"},{"size":3699,"mtime":1614591445745,"results":"69","hashOfConfig":"55"},{"size":7573,"mtime":1611144524000,"results":"70","hashOfConfig":"55"},{"size":3468,"mtime":1611144524000,"results":"71","hashOfConfig":"55"},{"size":2981,"mtime":1611144524000,"results":"72","hashOfConfig":"55"},{"size":15333,"mtime":1613036628499,"results":"73","hashOfConfig":"55"},{"size":12667,"mtime":1611144524000,"results":"74","hashOfConfig":"55"},{"size":4040,"mtime":1613461409968,"results":"75","hashOfConfig":"55"},{"size":716,"mtime":1614687509634,"results":"76","hashOfConfig":"55"},{"size":1497,"mtime":1609237628000,"results":"77","hashOfConfig":"55"},{"size":692,"mtime":1610615157000,"results":"78","hashOfConfig":"55"},{"size":2509,"mtime":1613128789145,"results":"79","hashOfConfig":"55"},{"size":802,"mtime":1612607041859,"results":"80","hashOfConfig":"55"},{"size":468,"mtime":1608631258000,"results":"81","hashOfConfig":"55"},{"size":2828,"mtime":1610987283000,"results":"82","hashOfConfig":"55"},{"size":908,"mtime":1610952733000,"results":"83","hashOfConfig":"55"},{"size":917,"mtime":1610699463000,"results":"84","hashOfConfig":"55"},{"size":845,"mtime":1611043583000,"results":"85","hashOfConfig":"55"},{"size":2865,"mtime":1613473702565,"results":"86","hashOfConfig":"55"},{"size":761,"mtime":1612608730893,"results":"87","hashOfConfig":"55"},{"size":769,"mtime":1614690466456,"results":"88","hashOfConfig":"55"},{"size":17631,"mtime":1613110963120,"results":"89","hashOfConfig":"55"},{"size":9720,"mtime":1613721118121,"results":"90","hashOfConfig":"55"},{"size":1157,"mtime":1613717463408,"results":"91","hashOfConfig":"55"},{"size":4146,"mtime":1613805913735,"results":"92","hashOfConfig":"55"},{"size":11980,"mtime":1613813161885,"results":"93","hashOfConfig":"55"},{"size":12212,"mtime":1614588015662,"results":"94","hashOfConfig":"55"},{"size":1199,"mtime":1613812905737,"results":"95","hashOfConfig":"55"},{"size":4380,"mtime":1614328153307,"results":"96","hashOfConfig":"55"},{"size":14627,"mtime":1613813161893,"results":"97","hashOfConfig":"55"},{"size":2352,"mtime":1614062579424,"results":"98","hashOfConfig":"55"},{"size":6883,"mtime":1614245365687,"results":"99","hashOfConfig":"55"},{"size":1737,"mtime":1614329247137,"results":"100","hashOfConfig":"55"},{"size":1670,"mtime":1614064911365,"results":"101","hashOfConfig":"55"},{"size":1218,"mtime":1614153265113,"results":"102","hashOfConfig":"55"},{"size":2972,"mtime":1614583124764,"results":"103","hashOfConfig":"55"},{"size":9735,"mtime":1614588499398,"results":"104","hashOfConfig":"55"},{"size":1210,"mtime":1614584415473,"results":"105","hashOfConfig":"55"},{"size":4033,"mtime":1614593918424,"results":"106","hashOfConfig":"55"},{"size":10349,"mtime":1614597481491,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"tcrdrc",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"110"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"110"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"110"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"110"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"110"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"110"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"147","usedDeprecatedRules":"110"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"110"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"110"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"110"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"110"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"110"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"110"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"110"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"110"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"110"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"110"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"110"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"110"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"110"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"110"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"220","usedDeprecatedRules":"110"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"110"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"110"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"110"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"/home/asen/Workspace/momoDesignSite/momo-site/src/index.js",[],["240","241"],"/home/asen/Workspace/momoDesignSite/momo-site/src/reportWebVitals.js",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/App.js",["242","243"],"import React, {Component} from \"react\";\nimport {Route, Redirect, Switch} from \"react-router-dom\";\nimport {ToastContainer} from \"react-toastify\";\nimport jwtDecode from \"jwt-decode\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport Container from 'react-bootstrap/Container';\nimport Navigation from \"./components/navigation\";\nimport AdminLoginForm from \"./admin/admin/adminLoginForm\";\nimport RegisterAdminForm from \"./admin/admin/registerAdminForm\";\nimport {getCurrentAdmin} from \"./services/adminLoginService\";\nimport {getCurrentUser} from \"./services/userLoginService\";\nimport AdminPanel from \"./admin/admin/adminPanel\";\nimport Products from \"./pages/products\";\nimport Basket from \"./pages/basket\";\nimport AllAdminsList from \"./admin/admin/allAdminsList\";\nimport UpdateAdminForm from \"./admin/admin/updateAdminForm\";\nimport UserLoginForm from \"./pages/user/userLoginForm\";\nimport UserProfile from \"./pages/user/userProfile\";\nimport RegisterUserForm from \"./admin/user/registerUserForm\";\nimport RegisterUserFormUsr from \"./pages/user/registerUserFormUsr\";\nimport Contacts from \"./pages/contacts/contacts\";\nimport ImagesUpload from \"./admin/images/imagesUpload\";\nimport AllUsersList from \"./admin/user/allUsersList\";\nimport UpdateUserForm from \"./admin/user/updateUserForm\";\nimport AllEmailsList from \"./admin/emails/allEmailsList\";\nimport UpdateUserFormUsr from \"./pages/user/updateUserFormUsr\";\nimport RegisterBioForm from \"./admin/bios/registerBioForm\";\nimport AllBiosList from \"./admin/bios/allBiosList\";\nimport UpdateBioForm from \"./admin/bios/updateBioForm\";\nimport RegisterBlogForm from \"./admin/blogs/registerBlogForm\";\nimport AllBlogsList from \"./admin/blogs/allBlogsList\";\nimport UpdateBlogForm from \"./admin/blogs/updateBlogForm\";\nimport Blog from \"./pages/blog/blog\";\nimport BlogDetails from \"./pages/blog/blogDetails\";\nimport AllCommentsList from \"./admin/comments/AllCommentsList\";\nimport RegisterDesignForm from \"./admin/designs/registerDesignForm\";\nimport AllDesignsList from \"./admin/designs/allDesignsList\";\nimport UpdateDesignForm from \"./admin/designs/updateDesignForm\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            admin: null,\n            user: null\n        }\n    }\n\n    componentDidMount() {\n        const jwtAdmin = getCurrentAdmin();\n        if (jwtAdmin !== null) {\n            const admin = jwtDecode(jwtAdmin);\n            this.setState({admin});\n            console.log(admin);\n        }\n        const jwtUser = getCurrentUser();\n        if (jwtUser !== null) {\n            const user = jwtDecode(jwtUser);\n            this.setState({user});\n            console.log(user);\n        }\n    }\n\n\n    render() {\n        return (\n            <div>\n                <ToastContainer/>\n                <Navigation/>\n                <Switch>\n                    <Route path=\"/adminlogin\" component={AdminLoginForm}/>\n                    <Route path=\"/blog/:id\" component={BlogDetails}/>\n                    <Route path=\"/blog\" component={Blog}/>\n                    <Route path=\"/contacts\" component={Contacts}/>\n                    <Route path=\"/userregister\" component={RegisterUserFormUsr}/>\n                    <Route path=\"/userlogin\" component={UserLoginForm}/>\n                    {this.state.user !== null &&\n                    <Switch>\n                        <Route path=\"/userprofile/:id\" component={UpdateUserFormUsr}/>\n                        <Route path=\"/userprofile\" component={UserProfile}/>\n                    </Switch>}\n                    <Route path=\"/products\" component={Products}/>\n                    <Route path=\"/basket\" component={Basket}/>\n                    {this.state.admin &&\n                    <Switch>\n                        <Route path=\"/admin/registeradmin\" component={RegisterAdminForm}/>\n                        <Route path=\"/admin/adminslist/:id\" component={UpdateAdminForm}/>\n                        <Route path=\"/admin/adminslist\" component={AllAdminsList}/>\n                        <Route path=\"/admin/registeruser\" component={RegisterUserForm}/>\n                        <Route path=\"/admin/userslist/:id\" component={UpdateUserForm}/>\n                        <Route path=\"/admin/userslist\" component={AllUsersList}/>\n                        <Route path=\"/admin/registerbio\" component={RegisterBioForm}/>\n                        <Route path=\"/admin/bioslist/:id\" component={UpdateBioForm}/>\n                        <Route path=\"/admin/bioslist\" component={AllBiosList}/>\n                        <Route path=\"/admin/registerblog\" component={RegisterBlogForm}/>\n                        <Route path=\"/admin/blogslist/:id\" component={UpdateBlogForm}/>\n                        <Route path=\"/admin/blogslist\" component={AllBlogsList}/>\n                        <Route path=\"/admin/commentslist\" component={AllCommentsList}/>\n                        <Route path=\"/admin/registerdesign\" component={RegisterDesignForm}/>\n                        <Route path=\"/admin/designslist/:id\" component={UpdateDesignForm}/>\n                        <Route path=\"/admin/designslist\" component={AllDesignsList}/>\n                        <Route path=\"/admin/emailslist\" component={AllEmailsList}/>\n                        <Route path=\"/admin/imagesupload\" component={ImagesUpload}/>\n                        <Route path=\"/admin\" component={AdminPanel}/>\n                    </Switch>}\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n","/home/asen/Workspace/momoDesignSite/momo-site/src/services/userLoginService.js",["244"],"import httpService from \"./httpService\";\nimport {toast} from \"react-toastify\";\nimport {apiUrl} from \"../config.json\";\n\nconst apiEndPoint = apiUrl + \"/userauthent\";\n\n//Fetching User frontend data to the sever\n//Taking the response token and storing it in localStorage so the user stayed always logget till logout\nexport function userLogin(data) {\n    return httpService\n        .post(apiEndPoint, data)\n        .then(response => {\n        if (response.data) {\n            localStorage.setItem(\"user\", response.data)\n        }\n        return response.data;\n    })\n        .catch(err => {\n            // toast.error(err.response.data);\n            return Promise.reject(err);\n        });\n}\n\n//Function for logging out the User\nexport function userLogout() {\n    localStorage.removeItem(\"user\");\n}\n\n//Function returning the currently logged User (token)\nexport function getCurrentUser() {\n    return localStorage.getItem(\"user\");\n}\n","/home/asen/Workspace/momoDesignSite/momo-site/src/services/adminLoginService.js",["245"],"import httpService from \"./httpService\";\nimport {toast} from \"react-toastify\";\nimport {apiUrl} from \"../config.json\";\n\nconst apiEndPoint = apiUrl + \"/adminauthent\";\n\n//Fetching frontend admin data (email and password) to the server\n//Taking the response token and saving it in the session storage(Login after every browser closing required);\nexport function adminLogin(data) {\n    return httpService\n        .post(apiEndPoint, data)\n        .then(response => {\n            if (response.data) {\n                sessionStorage.setItem(\"admin\", response.data);\n            }\n            return response.data;\n        })\n        .catch(err => {\n            // toast.error(err.response.data);\n            return Promise.reject(err);\n        });\n}\n\n//Function for logging out the Admin\nexport function adminLogout() {\n    sessionStorage.removeItem(\"admin\");\n}\n\n//Function returning the currently logged Admin (token)\nexport function getCurrentAdmin() {\n    return sessionStorage.getItem(\"admin\");\n}\n","/home/asen/Workspace/momoDesignSite/momo-site/src/components/navigation.jsx",["246","247"],"/home/asen/Workspace/momoDesignSite/momo-site/src/pages/products.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/pages/basket.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/pages/user/registerUserFormUsr.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/pages/user/userLoginForm.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/admin/admin/registerAdminForm.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/pages/user/userProfile.jsx",["248","249","250","251","252","253"],"import React, {Component} from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport Joi from \"joi\";\nimport {toast} from \"react-toastify\";\nimport Card from \"react-bootstrap/Card\";\nimport {getCurrentUser, userLogout} from \"../../services/userLoginService\";\nimport jwtDecode from \"jwt-decode\";\nimport {CardImg} from \"react-bootstrap\";\nimport {picUrl} from \"../../config.json\";\nimport Usercard from \"../../components/usercard\";\nimport '../../css/user/userProfile.css'\nimport {deleteUser} from \"../../services/userService\";\nimport UserDeleteAlert from \"../../components/userDeleteAlert\";\nimport {Link} from \"react-router-dom\";\nimport {getCommentsByUser} from \"../../services/commentService\";\nimport BlogComments from \"../../components/blogComments\";\n\n\nclass UserProfile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loggedUser: [],\n            comments: [],\n            url: '',\n            showAlert: false\n        }\n    }\n\n    async componentDidMount() {\n        const url = picUrl;\n        const jwtUser = getCurrentUser();\n        const loggedUser = jwtDecode(jwtUser);\n        const {data: comments} = await getCommentsByUser(loggedUser._id)\n        this.setState({loggedUser, url, comments});\n    }\n\n    handleDelete = async (user) => {\n        const usr = this.state.loggedUser;\n        this.setState({loggedUser: []});\n        try {\n            await deleteUser(user._id)\n            userLogout();\n        } catch (e) {\n            if (e.response && e.response.status === 404)\n                console.log('User with the given ID was not found');\n            toast.error('This user has already been deleted!');\n            this.setState({loggedUser: usr});\n        }\n    }\n\n\n    showAlert = (boolean) => {\n        this.setState({showAlert: boolean})\n    }\n\n    logoutUser = () => {\n        userLogout();\n        this.props.history.push(\"/userlogin\");\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Container>\n                    <Row className=\"justify-content-center\">\n                        <UserDeleteAlert\n                            heading=\"Are you sure you want to delete your profile?\"\n                            showAlert={this.state.showAlert}\n                            variant=\"danger\"\n                            buttonYes=\"Qj laina!\"\n                            buttonNo=\"Ne qj laina!\"\n                            onYes={() => this.handleDelete(this.state.loggedUser)}\n                            onNo={() => this.showAlert(false)}\n                            buttonYesVariant=\"info\"\n                            buttonNoVariant=\"danger\"/>\n                    </Row>\n                    <Row className=\"justify-content-center bg-secondary\">\n                        <Usercard\n                            className=\"d-flex flex-row user-profile-card\"\n                            src={this.state.url + this.state.loggedUser.userPicture}\n                            imgWidth={'20rem'}\n                            loggedUser={this.state.loggedUser}/>\n                    </Row>\n                    <Row className=\"bg-dark d-flex justify-content-around\">\n                        <Link to={`/userprofile/${this.state.loggedUser._id}`}>UPDATE PROFILE</Link>\n                        <Button onClick={() => this.showAlert(true)}>DELETE PROFILE</Button>\n                        <Button onClick={this.logoutUser}>LOG OUT</Button>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <h4>My comments: </h4>\n                            <BlogComments\n                                comments={this.state.comments}/>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default UserProfile;\n","/home/asen/Workspace/momoDesignSite/momo-site/src/pages/contacts/contacts.jsx",["254","255","256","257"],"import React, {Component} from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport Joi from \"joi\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport ContactsMailForm from \"../../components/contactsMailForm\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport {sendEmail} from \"../../services/emailService\";\nimport {toast} from \"react-toastify\";\n\nclass Contacts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fullname: '',\n            email: '',\n            subject: '',\n            message: '',\n            isDisabled: true,\n            errors: {}\n        }\n    }\n\n    schema = Joi.object({\n        fullname: Joi.string()\n            .required()\n            .min(5)\n            .max(50)\n            .label(\"Full name\"),\n        email: Joi.string()\n            .required()\n            .min(5)\n            .max(50)\n            .label(\"Email\"),\n        subject: Joi.string()\n            .required()\n            .min(5)\n            .max(255)\n            .label(\"Subject\"),\n        message: Joi.string()\n            .required()\n            .min(5)\n            .max(1000)\n            .label(\"Message\")\n\n    })\n\n    recaptchaRef = React.createRef();\n\n    validateEmail = () => {\n        const email = {\n            fullname: this.state.fullname,\n            email: this.state.email,\n            subject: this.state.subject,\n            message: this.state.message\n        };\n        const options = {abortEarly: false};\n        const result = this.schema.validate(email,options);\n        console.log(result);\n\n        if(!result.error) return null;\n\n        const errors = {};\n        for (let item of result.error.details)\n            errors[item.path[0]] = item.message;\n        return errors;\n    }\n\n    handleChange = (event) => {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name] : value,\n            isDisabled: false\n        });\n    }\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n        const errors = this.validateEmail();\n        this.setState({errors: errors || {}});\n        console.log(errors);\n        if(errors) return;\n\n        this.setState({isDisabled: true});\n\n        const email = {\n            fullname: this.state.fullname,\n            email: this.state.email,\n            subject: this.state.subject,\n            message: this.state.message\n        };\n\n        await sendEmail(email);\n        toast.success('Your message was sent successfully!');\n    }\n\n    render() {\n        return (\n            <div>\n                <Container className=\"container\" fluid={true}>\n                    <Row className=\"m-0\">\n                        <Col>\n                            <ContactsMailForm\n                                {...this.state}\n                                onChange={this.handleChange}\n                                onSubmit={this.handleSubmit}\n                                Recaptcha={\n                                    <ReCAPTCHA\n                                        ref={this.recaptchaRef}\n                                        sitekey=\"6LeBdTEaAAAAAAWhXFaJJ4ueXpNrLsvQoN1tXR27\"\n                                        size=\"invisible\"/>\n                                }\n                            />\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default Contacts;\n","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/admin/adminLoginForm.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/admin/admin/adminPanel.jsx",["258","259"],"import React, {Component} from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport {getCurrentAdmin, adminLogout} from \"../../services/adminLoginService\";\nimport jwtDecode from \"jwt-decode\";\nimport Button from \"react-bootstrap/Button\";\nimport Table from \"react-bootstrap/Table\";\nimport {Link} from \"react-router-dom\";\nimport {loggedAdmin} from \"../../services/adminService\";\nimport TrTdTable from \"../../components/trTdTable\";\n\n\nclass AdminPanel extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            admin: [],\n        }\n    }\n\n    async componentDidMount() {\n        const jwtAdmin = getCurrentAdmin();\n        const admin = jwtDecode(jwtAdmin);\n        this.setState({admin});\n        // console.log(aha);\n    }\n\n    logoutAdmin = () => {\n        adminLogout();\n        this.props.history.push(\"/adminlogin\");\n    }\n\n    render() {\n        return (\n            <div>\n                <Container>\n                    <h3>Logged as: {this.state.admin.adminName}</h3>\n                    <Table>\n                        <thead>\n                        <tr>\n                            <th>Element name</th>\n                            <th>Create new</th>\n                            <th>To list</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <TrTdTable\n                            name=\"Admins\"\n                            link1Name=\"Register\"\n                            link1To=\"/admin/registeradmin\"\n                            link2Name=\"All Admins list\"\n                            link2To=\"/admin/adminslist\"/>\n                        <TrTdTable\n                            name=\"Users\"\n                            link1Name=\"Register\"\n                            link1To=\"/admin/registeruser\"\n                            link2Name=\"All Users list\"\n                            link2To=\"/admin/userslist\"/>\n                        <TrTdTable\n                            name=\"Bios\"\n                            link1Name=\"Create\"\n                            link1To=\"/admin/registerbio\"\n                            link2Name=\"All Bios list\"\n                            link2To=\"/admin/bioslist\"/>\n                        <TrTdTable\n                            name=\"Blogs\"\n                            link1Name=\"Create\"\n                            link1To=\"/admin/registerblog\"\n                            link2Name=\"All Blogs list\"\n                            link2To=\"/admin/blogslist\"/>\n                        <TrTdTable\n                            name=\"Comments\"\n                            link1Name=\"N/A\"\n                            link1To=\"/admin/\"\n                            link2Name=\"All Comments list\"\n                            link2To=\"/admin/commentslist\"/>\n                        <TrTdTable\n                            name=\"Designs\"\n                            link1Name=\"Create\"\n                            link1To=\"/admin/registerdesign\"\n                            link2Name=\"All Designs list\"\n                            link2To=\"/admin/designslist\"/>\n                        <TrTdTable\n                            name=\"Emails\"\n                            link1Name=\"N/A\"\n                            link1To=\"/admin/\"\n                            link2Name=\"All Emails List\"\n                            link2To=\"/admin/emailslist\"/>\n                        </tbody>\n                    </Table>\n                    <Button\n                        onClick={this.logoutAdmin}>\n                        Logout\n                    </Button>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default AdminPanel;\n","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/admin/updateAdminForm.jsx",["260"],"import React, {Component} from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Joi from \"joi\";\nimport Form from \"react-bootstrap/Form\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport {toast} from \"react-toastify\";\nimport {FormLabel} from \"react-bootstrap\";\nimport FormCheck from \"react-bootstrap/FormCheck\";\nimport {getAdmin, updateAdmin} from \"../../services/adminService\";\n\nclass UpdateAdminForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            admin: {\n                adminName:\"\",\n                adminEmail:\"\",\n                adminPassword:\"\",\n                isAdmin: false\n            },\n            errors:{},\n            isDisabled:true\n        }\n\n    }\n\n    schema = Joi.object({\n        _id: Joi.string(),\n        adminName: Joi.string()\n            .required()\n            .min(5)\n            .max(50)\n            .label(\"Admin Name\"),\n        adminEmail: Joi.string()\n            .required()\n            .min(5)\n            .max(50)\n            .label(\"Admin Email\"),\n        adminPassword: Joi.string()\n            .required()\n            .min(8)\n            .max(255)\n            .label(\"Admin Password\"),\n        isAdmin: Joi.boolean()\n            .label(\"Is Admin\")\n    });\n\n\n    handleChange = (event) =>{\n        const admin = {...this.state.admin};\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        admin [name] = value;\n        this.setState({\n            admin,\n            isDisabled: false\n        })\n    }\n\n\n    async populateAdmin(){\n        try{\n            const adminId = this.props.match.params.id;\n            const {data: admin} = await getAdmin(adminId);\n            this.setState({admin: this.mapToViewModel(admin)});\n        }catch (e) {\n            if(e.response && e.response.status === 404)\n                console.log('There is no Admin with the given ID!');\n        }\n    }\n\n    async componentDidMount() {\n        await this.populateAdmin();\n    }\n\n    mapToViewModel(admin){\n        return {\n            _id: admin._id,\n            adminName: admin.adminName,\n            adminEmail: admin.adminEmail,\n            // adminPassword: admin.adminPassword,\n            isAdmin: admin.isAdmin\n        };\n    }\n\n\n    handleSubmit = async (event) =>{\n        event.preventDefault();\n        const errors = this.validateAdminInput();\n        this.setState({errors: errors || {}});\n        if(errors) return;\n\n        const admin = {\n            adminName: this.state.admin.adminName,\n            adminEmail: this.state.admin.adminEmail,\n            adminPassword: this.state.admin.adminPassword,\n            isAdmin: this.state.admin.isAdmin\n        };\n\n        await updateAdmin(admin,this.state.admin._id);\n        this.setState({isDisabled: true});\n        toast.success('Admin update was successful!');\n    }\n\n\n    validateAdminInput = () => {\n        const admin = {\n            adminName: this.state.admin.adminName,\n            adminEmail: this.state.admin.adminEmail,\n            adminPassword: this.state.admin.adminPassword,\n            isAdmin: this.state.admin.isAdmin\n        };\n        const options = {abortEarly: false};\n        const result = this.schema.validate(admin,options);\n        console.log(result);\n\n        if(!result.error) return null;\n        const errors = {};\n        for (let item of result.error.details)\n            errors[item.path[0]] = item.message;\n        return errors;\n    }\n\n\n    adminRedirect = () => {\n        this.props.history.push(\"/admin/adminslist\")\n    }\n\n\n    render() {\n        return (\n            <div>\n              <Container>\n                  <Form onSubmit={this.handleSubmit}>\n                      <FormGroup>\n                          <FormLabel>\n                              Admin Name\n                          </FormLabel>\n                          <FormControl\n                              autoFocus={true}\n                              id=\"adminName\"\n                              name=\"adminName\"\n                              type=\"text\"\n                              value={this.state.admin.adminName}\n                              placeholder=\"Enter Admin's name\"\n                              onChange={this.handleChange}/>\n                          {this.state.errors.adminName &&\n                          <span className=\"text-danger pt-2\">\n                                {this.state.errors.adminName}\n                            </span>}\n                      </FormGroup>\n                      <FormGroup>\n                          <FormLabel>\n                              Admin Email\n                          </FormLabel>\n                          <FormControl\n                              id=\"adminEmail\"\n                              name=\"adminEmail\"\n                              type=\"email\"\n                              value={this.state.admin.adminEmail}\n                              placeholder=\"Enter Admin's email\"\n                              onChange={this.handleChange}/>\n                          {this.state.errors.adminEmail &&\n                          <span className=\"text-danger pt-2\">\n                                {this.state.errors.adminEmail}\n                            </span>}\n                      </FormGroup>\n                      <FormGroup>\n                          <FormLabel>\n                              Admin Password\n                          </FormLabel>\n                          <FormControl\n                              id=\"adminPassword\"\n                              name=\"adminPassword\"\n                              type=\"password\"\n                              value={this.state.admin.adminPassword}\n                              placeholder=\"Enter Admin's password\"\n                              onChange={this.handleChange}/>\n                          {this.state.errors.adminPassword &&\n                          <span className=\"text-danger pt-2\">\n                                {this.state.errors.adminPassword}\n                            </span>}\n                      </FormGroup>\n                      <FormGroup>\n                          <FormCheck\n                              id=\"isAdmin\"\n                              name=\"isAdmin\"\n                              type=\"checkbox\"\n                              checked={this.state.admin.isAdmin}\n                              value={this.state.admin.isAdmin}\n                              label=\"Define Admin rights\"\n                              onChange={this.handleChange}/>\n                      </FormGroup>\n                      <Row>\n                          <Col>\n                              <Button\n                                  type=\"submit\"\n                                  disabled={this.state.isDisabled}>\n                                  UPDATE ADMIN\n                              </Button>\n                          </Col>\n                          <Col>\n                              <Button\n                                  onClick={this.adminRedirect}>\n                                  BACK TO ADMINS LIST\n                              </Button>\n                          </Col>\n                      </Row>\n                  </Form>\n              </Container>\n            </div>\n        );\n    }\n}\n\nexport default UpdateAdminForm;\n","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/admin/allAdminsList.jsx",["261"],"import React, {Component} from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Table from \"react-bootstrap/Table\";\nimport {Link} from \"react-router-dom\";\nimport {toast} from \"react-toastify\";\nimport {deleteAdmin, getAllAdmins, loggedAdmin} from \"../../services/adminService\";\n\nclass AllAdminsList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            admins: [],\n        }\n    }\n\n\n    async componentDidMount() {\n        const {data: admins} = await getAllAdmins();\n        this.setState({admins});\n    }\n\n\n    handleDelete = async (admin) => {\n        const allAdmins = this.state.admins;\n        const admins = allAdmins.filter(a => a._id !== admin._id);\n        this.setState({admins});\n\n        try {\n            await deleteAdmin(admin._id);\n            toast.success(`Admin : ${admin.adminName} was successfully deleted!`);\n        } catch (e) {\n            if (e.response && e.response.status === 404) console.log(\"Admin with the given ID was not found!\");\n            toast.error(\"This Admin has already been deleted.\");\n            this.setState({admins: allAdmins});\n        }\n    }\n\n\n    adminRedirect = () => {\n        this.props.history.push(\"/admin\");\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Container>\n                    <Row>\n                        <Col>\n                            <h2>All registered Admins table :</h2>\n                        </Col>\n                    </Row>\n                    <Table>\n                        <thead>\n                        <tr>\n                            <th>Full name</th>\n                            <th>Email</th>\n                            <th>Admin rights</th>\n                            <th>Update</th>\n                            <th>Delete</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {this.state.admins.map(adm => {\n                            return (\n                                <tr key={adm._id}>\n                                    <td>{adm.adminName}</td>\n                                    <td>{adm.adminEmail}</td>\n                                    {adm.isAdmin && <td>admin</td>}\n                                    {!adm.isAdmin && <td>suspended</td>}\n                                    <td>\n                                        <Link\n                                            to={`/admin/adminslist/${adm._id}`}>\n                                            Update admin\n                                        </Link>\n                                    </td>\n                                    <td>\n                                        <Button\n                                            onClick={() => this.handleDelete(adm)}>\n                                            Delete admin\n                                        </Button>\n                                    </td>\n                                </tr>\n                            )\n                        })}\n                        </tbody>\n                    </Table>\n                    <Button onClick={this.adminRedirect}>\n                        BACK TO ADMIN PANEL\n                    </Button>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default AllAdminsList;\n","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/user/allUsersList.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/admin/user/updateUserForm.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/admin/user/registerUserForm.jsx",["262"],"import React, {Component} from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport Joi from \"joi\";\nimport {toast} from \"react-toastify\";\nimport Card from \"react-bootstrap/Card\";\nimport {CardImg, FormLabel} from \"react-bootstrap\";\nimport {uploadImageAdmin} from \"../../services/imgService\";\nimport {registerUserAdmin} from \"../../services/userService\";\n\nclass RegisterUserForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userName: '',\n            userFamily: '',\n            userPassword: '',\n            userPicture: '',\n            userEmail: '',\n            userAddress: '',\n            userTelephone: '',\n            errors: {},\n            isDisabled: true,\n            showPicture: '',\n            uploadPicture: ''\n        }\n    }\n\n    schema = Joi.object({\n        userName: Joi.string()\n            .required()\n            .min(3)\n            .max(30)\n            .trim(true)\n            .label(\"First name\"),\n        userFamily: Joi.string()\n            .required()\n            .min(3)\n            .max(30)\n            .trim(true)\n            .label(\"Second name\"),\n        userPassword: Joi.string()\n            .required()\n            .min(8)\n            .max(255)\n            .trim(true)\n            .label(\"Password\"),\n        userEmail: Joi.string()\n            .required()\n            .min(5)\n            .max(50)\n            .trim(true)\n            .label(\"Email\"),\n        userPicture: Joi.string()\n            .required()\n            .min(5)\n            .max(50)\n            .label(\"Profile picture\"),\n        userAddress: Joi.string()\n            .required()\n            .min(5)\n            .max(100)\n            .trim(true)\n            .label(\"Address\"),\n        userTelephone: Joi.string()\n            .required()\n            .min(5)\n            .max(50)\n            .trim(true)\n            .label(\"Personal telephone\")\n    })\n\n\n    handleChange = (event) => {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value,\n            isDisabled: false\n        });\n    }\n\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n        const errors = this.validateUserInput();\n        this.setState({errors: errors || {}});\n        console.log(errors);\n        if (errors) return;\n\n        this.setState({isDisabled: true});\n\n        const user = {\n            userName: this.state.userName,\n            userFamily: this.state.userFamily,\n            userPassword: this.state.userPassword,\n            userEmail: this.state.userEmail,\n            userPicture: this.state.userPicture,\n            userAddress: this.state.userAddress,\n            userTelephone: this.state.userTelephone\n        };\n\n        await registerUserAdmin(user);\n        toast.success('The user was successfully registered!');\n\n        const data = new FormData();\n        data.append('file', this.state.uploadPicture);\n        await uploadImageAdmin(data);\n        toast.success('The profile image was successfully uploaded!');\n        console.log('User profile image was uploaded to gallery');\n    }\n\n\n    validateUserInput = () => {\n        const user = {\n            userName: this.state.userName,\n            userFamily: this.state.userFamily,\n            userPassword: this.state.userPassword,\n            userEmail: this.state.userEmail,\n            userPicture: this.state.userPicture,\n            userAddress: this.state.userAddress,\n            userTelephone: this.state.userTelephone\n        };\n        const options = {abortEarly: false};\n        const result = this.schema.validate(user, options);\n\n        if (!result.error) return null;\n\n        const errors = {};\n        for (let item of result.error.details)\n            errors[item.path[0]] = item.message;\n        return errors;\n    }\n\n\n    onImageHandler = (event) => {\n        this.setState({\n            showPicture: URL.createObjectURL(event.target.files[0]),\n            uploadPicture: event.target.files[0],\n            userPicture: event.target.files[0].name,\n            isDisabled: false\n        })\n    }\n\n\n    adminRedirect = () => {\n        this.props.history.push(\"/admin\");\n    }\n\n    render() {\n        return (\n            <div>\n                <Container className=\"container\" fluid={true}>\n                    <Row>\n                        <Col>\n                            <Row>\n                                <h3>Register User Form</h3>\n                            </Row>\n                            <Form onSubmit={this.handleSubmit}>\n                                <FormGroup>\n                                    <FormLabel htmlFor=\"image\">\n                                        Upload user profile image :\n                                    </FormLabel>\n                                    <Form.File\n                                        id=\"image\"\n                                        name=\"image\"\n                                        onChange={this.onImageHandler}/>\n                                    {this.state.errors.userPicture &&\n                                    <p className=\"text-danger pt-2\">\n                                        {this.state.errors.userPicture}\n                                    </p>}\n                                </FormGroup>\n                                <CardImg\n                                    src={this.state.showPicture}\n                                    style={{width: 300}}/>\n                                <Row>\n                                    <Col>\n                                        <FormGroup>\n                                            <FormLabel>First name :</FormLabel>\n                                            <FormControl\n                                                autoFocus={true}\n                                                name=\"userName\"\n                                                type=\"text\"\n                                                value={this.state.userName}\n                                                placeholder=\"Enter user's first name\"\n                                                onChange={this.handleChange}/>\n                                            {this.state.errors.userName &&\n                                            <p className=\"text-danger pt-2\">\n                                                {this.state.errors.userName}\n                                            </p>}\n                                        </FormGroup>\n                                    </Col>\n                                    <Col>\n                                        <FormGroup>\n                                            <FormLabel>Second name :</FormLabel>\n                                            <FormControl\n                                                name=\"userFamily\"\n                                                type=\"text\"\n                                                value={this.state.userFamily}\n                                                placeholder=\"Enter user's second name\"\n                                                onChange={this.handleChange}/>\n                                            {this.state.errors.userFamily &&\n                                            <p className=\"text-danger pt-2\">\n                                                {this.state.errors.userFamily}\n                                            </p>}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <FormGroup>\n                                    <FormLabel>Address :</FormLabel>\n                                    <FormControl\n                                        name=\"userAddress\"\n                                        type=\"text\"\n                                        value={this.state.userAddress}\n                                        placeholder=\"Enter user's address: country / city / street / postal code\"\n                                        onChange={this.handleChange}/>\n                                    {this.state.errors.userAddress &&\n                                    <p className=\"text-danger pt-2\">\n                                        {this.state.errors.userAddress}\n                                    </p>}\n                                </FormGroup>\n                                <Row>\n                                    <Col>\n                                        <FormGroup>\n                                            <FormLabel>E-mail :</FormLabel>\n                                            <FormControl\n                                                name=\"userEmail\"\n                                                type=\"email\"\n                                                value={this.state.userEmail}\n                                                placeholder=\"Enter user's e-mail address\"\n                                                onChange={this.handleChange}/>\n                                            {this.state.errors.userEmail &&\n                                            <p className=\"text-danger pt-2\">\n                                                {this.state.errors.userEmail}\n                                            </p>}\n                                        </FormGroup>\n                                    </Col>\n                                    <Col>\n                                        <FormGroup>\n                                            <FormLabel>Telephone :</FormLabel>\n                                            <FormControl\n                                                name=\"userTelephone\"\n                                                type=\"text\"\n                                                value={this.state.userTelephone}\n                                                placeholder=\"Enter user's telephone number\"\n                                                onChange={this.handleChange}/>\n                                            {this.state.errors.userTelephone &&\n                                            <p className=\"text-danger pt-2\">\n                                                {this.state.errors.userTelephone}\n                                            </p>}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <FormGroup>\n                                    <FormLabel>Password :</FormLabel>\n                                    <FormControl\n                                        name=\"userPassword\"\n                                        type=\"password\"\n                                        value={this.state.userPassword}\n                                        placeholder=\"Enter user's password : min. 8 symbols\"\n                                        onChange={this.handleChange}/>\n                                    {this.state.errors.userPassword &&\n                                    <p className=\"text-danger pt-2\">\n                                        {this.state.errors.userPassword}\n                                    </p>}\n                                </FormGroup>\n                                <Row className=\"mt-3\">\n                                    <Col md={4}>\n                                        <Button\n                                            type=\"submit\"\n                                            disabled={this.state.isDisabled}>\n                                            SUBMIT\n                                        </Button>\n                                    </Col>\n                                    <Col md={{span: 4, offset: 4}} className=\"d-flex flex-row-reverse\">\n                                        <Button\n                                            onClick={this.adminRedirect}>\n                                            BACK TO ADMIN PANEL\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </Form>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default RegisterUserForm;\n","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/images/imagesUpload.jsx",["263","264","265"],"import React, {Component} from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport CardImg from \"react-bootstrap/CardImg\";\nimport FormLabel from \"react-bootstrap/FormLabel\";\nimport ImagesUploadForm from \"../../components/imagesUploadForm\";\nimport {uploadImageAdmin} from \"../../services/imgService\";\nimport {toast} from \"react-toastify\";\n\nclass ImagesUpload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedFiles: null,\n            showedFiles: [],\n            isDisabled: true\n        }\n    }\n\n    //Loop through event.target.files to create ObjectURL\n    onChangeHandler = (event) => {\n\n        if (this.maxSelectFiles(event)) {\n\n            const files = [];\n            for (let i = 0; i < event.target.files.length; i++) {\n                files.push(URL.createObjectURL(event.target.files[i]));\n            }\n\n            this.setState({\n                showedFiles: files,\n                selectedFiles: event.target.files,\n                isDisabled: false\n            });\n        }\n    }\n\n    //Loop through selected files array to append to data;\n    onClickHandler = async () => {\n\n        const data = new FormData();\n        for (let i = 0; i < this.state.selectedFiles.length; i++) {\n            data.append('file', this.state.selectedFiles[i])\n        }\n\n        await uploadImageAdmin(data);\n        this.setState({\n            isDisabled:true\n        })\n        toast.success('Images were successfully uploaded!');\n    }\n\n\n    //Function for validating the amount of images to upload simultaneously\n    maxSelectFiles = (event) => {\n\n        let files = event.target.files;\n        if (files.length > 5) {\n            toast.error(\"Only 5 images can be uploaded at a time!\");\n            event.target.value = null;\n            return false;\n        }\n        return true;\n    }\n\n    adminRedirect = () => {\n        this.props.history.push(\"/admin\")\n    }\n\n    render() {\n        return (\n            <div>\n                <Container>\n                    <Card>\n                        {this.state.selectedFiles !== null &&\n                        <Card.Header>\n                            <span>Images waiting for upload :</span>\n                        </Card.Header>}\n                        <Card.Body>\n                            {this.state.showedFiles.map(sf => {\n                                return (\n                                    <CardImg\n                                        key={sf}\n                                        className=\"m-2\"\n                                        style={{width: '20rem'}}\n                                        src={sf}/>\n                                )\n                            })\n                            }\n                            <ImagesUploadForm onChange={this.onChangeHandler}/>\n                            <Row className=\"mt-3\">\n                                <Col>\n                                    <Button\n                                        type=\"button\"\n                                        disabled={this.state.isDisabled}\n                                        onClick={this.onClickHandler}>UPLOAD</Button>\n                                </Col>\n                                <Col md={{span: 4, offset: 4}} className=\"d-flex flex-row-reverse\">\n                                    <Button\n                                        onClick={this.adminRedirect}>\n                                        BACK TO ADMIN PANEL\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default ImagesUpload;\n","/home/asen/Workspace/momoDesignSite/momo-site/src/services/httpService.js",["266"],"import axios from \"axios\";\nimport {toast} from \"react-toastify\";\n\naxios.interceptors.response.use(success => {\n    console.log(success);\n    return (success);\n}, error => {\n    const expectedError = error.response &&\n        error.response.status >= 400 &&\n        error.response.status < 500;\n    if (expectedError) {\n        console.log(error.response.data);\n        toast.error(error.response.data, {\n            position: \"top-center\"\n        });\n    }\n    if (!expectedError) {\n        console.log(error);\n        toast.error('An Unexpected error occured!');\n    }\n    return Promise.reject(error);\n});\n\nexport default {\n    get: axios.get,\n    post: axios.post,\n    put: axios.put,\n    delete: axios.delete\n};\n","/home/asen/Workspace/momoDesignSite/momo-site/src/services/adminService.js",["267"],"import httpService from \"./httpService\";\nimport {toast} from \"react-toastify\";\nimport {getCurrentAdmin} from \"./adminLoginService\";\nimport {apiUrl} from \"../config.json\";\n\nconst apiEndPoint = apiUrl + \"/admins\";\n\nfunction adminUrl(adminId) {\n    return `${apiEndPoint}/${adminId}`;\n}\n\n\nexport function getAdmin(adminId) {\n    return httpService\n        .get(adminUrl(adminId), {\n            headers: {\n                'x-auth-token': getCurrentAdmin()\n            }\n        })\n}\n\n\nexport function getAllAdmins() {\n    return httpService\n        .get(apiEndPoint, {\n            headers: {\n                'x-auth-token': getCurrentAdmin()\n            }\n        });\n}\n\n\nexport function registerAdmin(admin) {\n    return httpService\n        .post(apiEndPoint, admin,{\n            headers: {\n                'x-auth-token': getCurrentAdmin()\n            }\n        });\n}\n\n\nexport function updateAdmin(admin, adminId) {\n    const body = {...admin};\n    return httpService\n        .put(adminUrl(adminId), body, {\n            headers: {\n                'x-auth-token': getCurrentAdmin()\n            }\n        });\n}\n\n\nexport function deleteAdmin(adminId) {\n    return httpService\n        .delete(adminUrl(adminId), {\n            headers: {\n                'x-auth-token': getCurrentAdmin()\n            }\n        })\n}\n\n\nexport function loggedAdmin(){\n    return httpService\n        .get(apiEndPoint+\"/adm\",{\n            headers:{\n                'x-auth-token': getCurrentAdmin()\n            }\n        })\n}\n","/home/asen/Workspace/momoDesignSite/momo-site/src/services/imgService.js",["268"],"import httpService from \"./httpService\";\nimport {getCurrentAdmin} from \"./adminLoginService\";\nimport {getCurrentUser} from \"./userLoginService\";\nimport {apiUrl} from \"../config.json\";\n\nconst apiEndPoint = apiUrl + \"/images\";\n\n\nexport function uploadImageAdmin(data){\n    return httpService\n        .post(apiEndPoint, data, {\n            headers: {\n                'x-auth-token': getCurrentAdmin()\n            }\n        })\n        .then(response => {\n            console.log(response.statusText)\n        });\n}\n\n\nexport function uploadImageUser(data){\n    return httpService\n        .post(apiEndPoint,data);\n}\n\n\n\nexport function getImages(){\n    return httpService\n        .get(apiEndPoint)\n}\n","/home/asen/Workspace/momoDesignSite/momo-site/src/services/userService.js",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/services/emailService.js",["269"],"import httpService from \"./httpService\";\nimport {getCurrentAdmin} from \"./adminLoginService\";\nimport {apiUrl} from \"../config.json\";\n\nconst apiEndPoint = apiUrl + \"/emails\";\n\nfunction emailUrl(id){\n    return `${apiEndPoint}/${id}`;\n}\n\n\nexport function sendEmail(email){\n    return httpService\n        .post(apiEndPoint, email)\n        .then(res => console.log(res.data))\n        .catch(error => console.log(error))\n}\n\nexport function getAllEmails(){\n    return httpService\n        .get(apiEndPoint, {\n            headers: {\n                'x-auth-token': getCurrentAdmin()\n            }\n        });\n}\n\nexport function deleteEmail(emailId){\n    return httpService\n        .delete(emailUrl(emailId),{\n            headers: {\n                'x-auth-token': getCurrentAdmin()\n            }\n        });\n}\n","/home/asen/Workspace/momoDesignSite/momo-site/src/components/product.jsx",["270"],"import React, {Component} from 'react';\nimport Button from \"react-bootstrap/Button\";\n\nclass Product extends Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return (\n            <div>\n                <span>{this.props.product.name}</span>\n                <Button onClick={()=>this.props.onBuy(this.props.product)} disabled={this.props.product.selected}>Buy</Button>\n            </div>\n        );\n    }\n}\n\nexport default Product;\n","/home/asen/Workspace/momoDesignSite/momo-site/src/components/contactsMailForm.jsx",["271"],"import React from 'react';\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport {FormLabel} from \"react-bootstrap\";\n\nfunction ContactsMailForm(props) {\n    return (\n        <div>\n            <Form onSubmit={props.onSubmit}>\n                <FormGroup>\n                    <FormLabel>Full name</FormLabel>\n                    <FormControl\n                    id=\"fullname\"\n                    name=\"fullname\"\n                    value={props.fullname}\n                    type=\"text\"\n                    placeholder=\"Please enter your full name\"\n                    onChange={props.onChange}/>\n                    {props.errors.fullname &&\n                    <p className=\"alert alert-danger\">{props.errors.fullname}</p>}\n                </FormGroup>\n                <FormGroup>\n                    <FormLabel>Email</FormLabel>\n                    <FormControl\n                    id=\"email\"\n                    name=\"email\"\n                    value={props.email}\n                    type=\"email\"\n                    placeholder=\"Please enter your email\"\n                    onChange={props.onChange}/>\n                    {props.errors.email &&\n                    <p className=\"alert alert-danger\">{props.errors.email}</p>}\n                </FormGroup>\n                <FormGroup>\n                    <FormLabel>Subject</FormLabel>\n                    <FormControl\n                    id=\"subject\"\n                    name=\"subject\"\n                    value={props.subject}\n                    type=\"text\"\n                    placeholder=\"Please enter the email subject\"\n                    onChange={props.onChange}/>\n                    {props.errors.subject &&\n                    <p className=\"alert alert-danger\">{props.errors.subject}</p>}\n                </FormGroup>\n                <FormGroup>\n                    <FormLabel>Message</FormLabel>\n                    <FormControl\n                    id=\"message\"\n                    name=\"message\"\n                    value={props.message}\n                    as=\"textarea\"\n                    placeholder=\"Please enter your message\"\n                    onChange={props.onChange}/>\n                    {props.errors.message &&\n                    <p className=\"alert alert-danger\">{props.errors.message}</p>}\n                </FormGroup>\n                <Row className=\"m-0\">\n                    <Button\n                    type=\"submit\"\n                    disabled={props.isDisabled}>SEND MESSAGE</Button>\n                </Row>\n                {props.Recaptcha}\n            </Form>\n        </div>\n    );\n}\n\nexport default ContactsMailForm;\n","/home/asen/Workspace/momoDesignSite/momo-site/src/components/userDeleteAlert.jsx",["272","273","274"],"import React, {useState} from 'react';\nimport Alert from 'react-bootstrap/Alert';\nimport Button from \"react-bootstrap/Button\";\nimport {Fade} from \"react-bootstrap\";\nimport {Transition} from \"react-transition-group\";\nimport Row from \"react-bootstrap/Row\";\n\n\nfunction UserDeleteAlert(props) {\n\n    return (\n        <React.Fragment>\n            <Alert style={{width:'40rem'}} show={props.showAlert} variant={props.variant} className=\"text-center\">\n                <Alert.Heading>{props.heading}</Alert.Heading>\n                <hr/>\n                <Row className=\"justify-content-around\">\n                <Button onClick={props.onYes} variant={props.buttonYesVariant}>{props.buttonYes}</Button>\n                <Button onClick={props.onNo} variant={props.buttonNoVariant}>{props.buttonNo}</Button>\n                </Row>\n            </Alert>\n        </React.Fragment>\n    );\n}\n\nexport default UserDeleteAlert;\n","/home/asen/Workspace/momoDesignSite/momo-site/src/components/usercard.jsx",["275"],"import React from 'react';\nimport Card from \"react-bootstrap/Card\";\nimport {CardImg} from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction Usercard(props) {\n    return (\n        <React.Fragment>\n            <Card className={props.className}>\n                <Card.Header>\n                    <CardImg src={props.src} style={{width: props.imgWidth}}/>\n                </Card.Header>\n                <Card.Body>\n                    <Card.Title>{props.loggedUser.userName} {props.loggedUser.userFamily}</Card.Title>\n                    <Card.Subtitle>e-mail : {props.loggedUser.userEmail}</Card.Subtitle>\n                    <Card.Text>address : {props.loggedUser.userAddress}</Card.Text>\n                    <Card.Subtitle>telephone : {props.loggedUser.userTelephone}</Card.Subtitle>\n                </Card.Body>\n            </Card>\n        </React.Fragment>\n    );\n}\n\nexport default Usercard;\n","/home/asen/Workspace/momoDesignSite/momo-site/src/components/imagesUploadForm.jsx",["276","277","278","279","280"],"import React from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport FormLabel from \"react-bootstrap/FormLabel\";\n\nfunction ImagesUploadForm(props) {\n    return (\n        <div>\n            <Form>\n                <FormLabel htmlFor=\"images\">\n                    Upload images :\n                </FormLabel>\n                <Form.File\n                type=\"file\"\n                id=\"images\"\n                name=\"images\"\n                label=\"Max images to upload : 5\"\n                multiple\n                onChange={props.onChange}/>\n            </Form>\n        </div>\n    );\n}\n\nexport default ImagesUploadForm;\n","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/emails/allEmailsList.jsx",["281"],"import React, {Component} from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport Table from \"react-bootstrap/Table\";\nimport Container from \"react-bootstrap/Container\";\nimport {toast} from \"react-toastify\";\nimport {Link} from \"react-router-dom\";\nimport {deleteEmail, getAllEmails} from \"../../services/emailService\";\n\nclass AllEmailsList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            emails: []\n        }\n    }\n\n    async componentDidMount() {\n        const {data: emails} = await getAllEmails();\n        this.setState({emails});\n        console.log(this.state);\n    }\n\n    handleDelete = async (email) => {\n        const allEmails = this.state.emails;\n        const emails = allEmails.filter(eml => eml._id !== email._id);\n        this.setState({emails});\n\n        try {\n            await deleteEmail(email._id);\n            toast.success(\"Email was successfully deleted!\");\n        } catch (e) {\n            if (e.response && e.response.status === 404)\n                console.log('Email with the given ID was not found!');\n            toast.error('This email has already been deleted!');\n            this.setState({emails: allEmails});\n        }\n    }\n\n    adminRedirect = () => {\n        this.props.history.push(\"/admin\");\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Container>\n                    <Table>\n                        <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Email</th>\n                            <th>Subject</th>\n                            <th>Message</th>\n                            <th>Delete</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {this.state.emails.map(eml => {\n                            return (\n                                <tr key={eml._id}>\n                                    <td>{eml.fullname}</td>\n                                    <td>{eml.email}</td>\n                                    <td>{eml.subject}</td>\n                                    <td>{eml.message}</td>\n                                    <td>\n                                        <Button\n                                            onClick={() => this.handleDelete(eml)}>\n                                            DELETE\n                                        </Button>\n                                    </td>\n                                </tr>\n                            )\n                        })}\n                        </tbody>\n                    </Table>\n                    <Button onClick={this.adminRedirect}>\n                        BACK TO ADMIN PANEL\n                    </Button>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default AllEmailsList;\n","/home/asen/Workspace/momoDesignSite/momo-site/src/components/trTdTable.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/components/navLinkComp.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/pages/user/updateUserFormUsr.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/admin/bios/registerBioForm.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/services/bioService.js",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/admin/bios/allBiosList.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/admin/bios/updateBioForm.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/admin/blogs/registerBlogForm.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/services/blogService.js",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/admin/blogs/allBlogsList.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/admin/blogs/updateBlogForm.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/pages/blog/blog.jsx",["282","283"],"import React, {Component} from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport {Link} from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport CardImg from \"react-bootstrap/CardImg\";\nimport {getBlogs} from \"../../services/blogService\";\n\nclass Blog extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            blogs: []\n        }\n    }\n\n    async componentDidMount() {\n        const {data: blogs} = await getBlogs();\n        this.setState({\n            blogs\n        });\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Container className=\"container\" fluid={true}>\n                    <Row>\n                        <Col>\n                            {this.state.blogs.map(blog => {\n                                    return (\n                                        <Card key={blog._id}>\n                                            <Card.Header>\n                                                Date : {new Date(blog.blogDate).toLocaleString()}\n                                            </Card.Header>\n                                            <Card.Body>\n                                                <Card.Title>\n                                                    {blog.blogTitle}\n                                                </Card.Title>\n                                                <Card.Text>\n                                                    {blog.blogSubTitle}\n                                                </Card.Text>\n                                            </Card.Body>\n                                            <Card.Footer>\n                                                <Link to={`/blog/${blog._id}`}>\n                                                    Read the whole article\n                                                </Link>\n                                            </Card.Footer>\n                                        </Card>\n                                    )\n                                }\n                            )}\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default Blog;\n","/home/asen/Workspace/momoDesignSite/momo-site/src/pages/blog/blogDetails.jsx",["284","285","286"],"import React, {Component} from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Joi from \"joi\";\nimport Form from \"react-bootstrap/Form\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport {toast} from \"react-toastify\";\nimport {getBlog} from \"../../services/blogService\";\nimport {picUrl} from \"../../config.json\";\nimport {createComment, getCommentsByBlog} from \"../../services/commentService\";\nimport BlogCard from \"../../components/blogCard\";\nimport Image from 'react-bootstrap/Image'\nimport BlogComments from \"../../components/blogComments\";\nimport {getCurrentUser} from \"../../services/userLoginService\";\nimport jwtDecode from \"jwt-decode\";\n\nclass BlogDetails extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            blog: '',\n            comments: [],\n            comment: {\n                commentText: '',\n                userId: '',\n                blogId: ''\n            },\n            user: null,\n            errors: {},\n            isDisabled: true\n        }\n    }\n\n    schema = Joi.object({\n        commentText: Joi.string()\n            .min(10)\n            .max(1000)\n            .required(),\n        userId: Joi.string()\n            .required(),\n        blogId: Joi.string()\n            .required()\n    })\n\n\n    async componentDidMount() {\n        const blogId = this.props.match.params.id;\n        const {data: blog} = await getBlog(blogId);\n        const {data: comments} = await getCommentsByBlog(blogId);\n        const jwtUser = getCurrentUser();\n        if (jwtUser !== null) {\n            const user = jwtDecode(jwtUser);\n            this.setState({user});\n            console.log(user);\n        }\n        this.setState({\n            blog,\n            comments\n        });\n\n        console.log(this.state.user);\n    }\n\n    handleKeyPress = async (event) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n            const errors = this.validateCommentInput();\n            this.setState({errors: errors || {}});\n            if (errors) return;\n\n            const comment = {\n                commentText: this.state.comment.commentText,\n                userId: this.state.user._id,\n                blogId: this.props.match.params.id\n            };\n            await createComment(comment);\n            toast.success('Your comment was successfully posted');\n\n            const blogId = this.props.match.params.id;\n            const {data: comments} = await getCommentsByBlog(blogId);\n\n            const emptyComment = {\n                commentText: '',\n                userId: '',\n                blogId: ''\n            }\n\n            this.setState({\n                comments,\n                comment: emptyComment\n            });\n        }\n    }\n\n\n    handleChange = (event) => {\n        const comment = {};\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        comment [name] = value;\n        this.setState({\n            comment\n        })\n    }\n\n\n    validateCommentInput = () => {\n        const blogId = this.props.match.params.id;\n        const comment = {\n            commentText: this.state.comment.commentText,\n            userId: this.state.user._id,\n            blogId: blogId\n        }\n        const options = {abortEarly: false};\n        const result = this.schema.validate(comment, options);\n        console.log(result);\n\n        if (!result.error) return null;\n        const errors = {};\n        for (let item of result.error.details)\n            errors[item.path[0]] = item.message;\n        return errors;\n    }\n\n\n    registerRedirect = () => {\n        this.props.history.push(\"/userlogin\");\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Container className=\"container\" fluid={true}>\n                    <Row>\n                        <Col>\n                            <BlogCard\n                                items={this.state.blog}/>\n                        </Col>\n                    </Row>\n                    {!this.state.user &&\n                    <Row>\n                        <Col className=\"d-flex flex-row-reverse\">\n                            <Button\n                                onClick={this.registerRedirect}>\n                                Leave a comment\n                            </Button>\n                        </Col>\n                    </Row>}\n                    {this.state.user &&\n                    <Row>\n                        <Col>\n                            <Card>\n                                <Card.Body className=\"d-flex flex-row\">\n                                    <Image\n                                        src={picUrl + this.state.user.userPicture}\n                                        style={{width: '5rem', height: '5rem'}}\n                                        roundedCircle/>\n                                    <Col>\n                                        <Form onKeyPress={this.handleKeyPress}>\n                                            <FormGroup>\n                                                <FormControl\n                                                    autoFocus={true}\n                                                    name=\"commentText\"\n                                                    as=\"textarea\"\n                                                    rows=\"3\"\n                                                    value={this.state.comment.commentText}\n                                                    placeholder=\"You can leave your comment here...\"\n                                                    onChange={this.handleChange}/>\n                                                {this.state.errors.commentText &&\n                                                <p className=\"text-danger pt-2\">\n                                                    {this.state.errors.commentText}\n                                                </p>}\n                                            </FormGroup>\n                                        </Form>\n                                    </Col>\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                    </Row>}\n                    {this.state.comments &&\n                    <Row>\n                        <Col>\n                            <BlogComments\n                                comments={this.state.comments}\n                            />\n                        </Col>\n                    </Row>}\n                </Container>\n            </div>\n        );\n    }\n};\n\nexport default BlogDetails;\n","/home/asen/Workspace/momoDesignSite/momo-site/src/services/commentService.js",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/components/blogCard.jsx",["287"],"import React from 'react';\nimport Row from \"react-bootstrap/Row\";\nimport {Link} from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport CardImg from \"react-bootstrap/CardImg\";\nimport {picUrl} from \"../config.json\";\n\n\nfunction BlogCard(props) {\n\n    const {items} = props;\n    return (\n        <React.Fragment>\n            <Card>\n                <Card.Header>\n                    Date : {new Date(items.blogDate).toLocaleString()}\n                </Card.Header>\n                <Card.Body>\n                    <Card.Title>\n                        {items.blogTitle}\n                    </Card.Title>\n                    {items.blogPictures &&\n                    <Row className=\"justify-content-center\">\n                        {items.blogPictures.map(bp => {\n                            return (\n                                <CardImg\n                                    key={bp}\n                                    className=\"m-2\"\n                                    style={{width: '20rem'}}\n                                    src={picUrl + bp}/>\n                            )\n                        })}\n                    </Row>}\n                    <Card.Text>\n                        {items.blogText}\n                    </Card.Text>\n                </Card.Body>\n                {items.blogLink &&\n                <Card.Footer>\n                    <Link to={items.blogLink}>\n                        Additional info you can find interesting : {items.blogLink}\n                    </Link>\n                </Card.Footer>}\n            </Card>\n        </React.Fragment>\n    );\n}\n\nexport default BlogCard;\n","/home/asen/Workspace/momoDesignSite/momo-site/src/components/blogComments.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/admin/comments/AllCommentsList.jsx",["288","289","290"],"import React, {Component} from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Table from \"react-bootstrap/Table\";\nimport {Button, Image} from \"react-bootstrap\";\nimport {toast} from \"react-toastify\";\nimport {deleteComment, getComments} from \"../../services/commentService\";\n\nclass AllCommentsList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            comments: []\n        }\n    }\n\n\n    async componentDidMount() {\n        const {data: comments} = await getComments();\n        this.setState({\n            comments\n        });\n    }\n\n\n    handleDelete = async (comment) => {\n        const allComments = this.state.comments;\n        const comments = allComments.filter(c => c._id !== comment._id);\n        this.setState({comments});\n        try {\n            await deleteComment(comment._id);\n            toast.success('Comment was successfully deleted!');\n        } catch (e) {\n            if (e.response && e.response.status === 404) console.log('Comment with given ID was not found!');\n            toast.error('This comment has already been deleted!');\n            this.setState({\n                comments: allComments\n            });\n        }\n\n    }\n\n\n    adminRedirect = () => {\n        this.props.history.push(\"/admin\");\n    }\n\n    render() {\n        return (\n            <div>\n                <Container className=\"container\" fluid={true}>\n                    <Table striped bordered hover>\n                        <thead>\n                        <tr>\n                            <th>User</th>\n                            <th>Comment</th>\n                            <th>Date</th>\n                            <th>Delete</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {this.state.comments.map(comment => {\n                            return (\n                                <tr>\n                                    <td>{comment.user.userName} {comment.user.userFamily}</td>\n                                    <td>{comment.commentText}</td>\n                                    <td>{new Date(comment.commentDate).toLocaleString()}</td>\n                                    <td>\n                                        <Button onClick={() =>\n                                            this.handleDelete(comment)}>\n                                            Delete\n                                        </Button>\n                                    </td>\n                                </tr>\n                            )\n                        })}\n                        </tbody>\n                    </Table>\n                    <Button onClick={this.adminRedirect}>\n                        BACK TO ADMIN PANEL\n                    </Button>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default AllCommentsList;\n","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/designs/registerDesignForm.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/services/designService.js",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/admin/designs/allDesignsList.jsx",["291","292","293"],"import React, {Component} from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Table from \"react-bootstrap/Table\";\nimport {Button, Image} from \"react-bootstrap\";\nimport {toast} from \"react-toastify\";\nimport {Link} from \"react-router-dom\";\nimport {picUrl} from \"../../config.json\";\nimport {deleteDesign, getDesigns} from \"../../services/designService\";\n\nclass AllDesignsList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            designs: []\n        }\n    }\n\n\n    async componentDidMount() {\n        const {data: designs} = await getDesigns();\n        this.setState({\n            designs\n        });\n        console.log(this.state.designs);\n    }\n\n\n    handleDelete = async (design) => {\n        const allDesigns = this.state.designs;\n        const designs = allDesigns.filter(d => d._id !== design._id);\n        this.setState({designs});\n        try {\n            await deleteDesign(design._id);\n            toast.success(`Design : ${design.designTitle} was successfully deleted!`);\n        } catch (e) {\n            if (e.response && e.response.status === 404) console.log('Design with the given ID was not found!');\n            toast.error('This Design was aleady been deleted!');\n            this.setState({\n                designs: allDesigns\n            });\n        }\n    }\n\n    adminRedirect = () => {\n        this.props.history.push(\"/admin\");\n    }\n\n    render() {\n        return (\n            <div>\n                <Container className=\"container\" fluid={true}>\n                    <Table striped bordered hover>\n                        <thead>\n                        <tr>\n                            <th>Title</th>\n                            <th>Text</th>\n                            <th>Pictures</th>\n                            <th>Update</th>\n                            <th>Delete</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {this.state.designs.map(design => {\n                            return (\n                                <tr key={design._id}>\n                                    <td>{design.designTitle}</td>\n                                    <td>{design.designText}</td>\n                                    <td>\n                                        {design.designPictures.map(dp => {\n                                            return (\n                                                <Image\n                                                    key={dp}\n                                                    src={picUrl + dp}\n                                                    width=\"70\"\n                                                    height=\"70\"\n                                                    className=\"m-1\"\n                                                />\n                                            )\n                                        })}\n                                    </td>\n                                    <td>\n                                        <Link to={`/admin/designslist/${design._id}`}>\n                                            Update\n                                        </Link>\n                                    </td>\n                                    <td>\n                                        <Button\n                                            onClick={() => this.handleDelete(design)}>\n                                            Delete\n                                        </Button>\n                                    </td>\n                                </tr>\n                            )\n                        })}\n                        </tbody>\n                    </Table>\n                    <Button onClick={this.adminRedirect}>\n                        BACK TO ADMIN PANEL\n                    </Button>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default AllDesignsList;\n","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/designs/updateDesignForm.jsx",[],{"ruleId":"294","replacedBy":"295"},{"ruleId":"296","replacedBy":"297"},{"ruleId":"298","severity":1,"message":"299","line":2,"column":16,"nodeType":"300","messageId":"301","endLine":2,"endColumn":24},{"ruleId":"298","severity":1,"message":"302","line":7,"column":8,"nodeType":"300","messageId":"301","endLine":7,"endColumn":17},{"ruleId":"298","severity":1,"message":"303","line":2,"column":9,"nodeType":"300","messageId":"301","endLine":2,"endColumn":14},{"ruleId":"298","severity":1,"message":"303","line":2,"column":9,"nodeType":"300","messageId":"301","endLine":2,"endColumn":14},{"ruleId":"298","severity":1,"message":"304","line":5,"column":9,"nodeType":"300","messageId":"301","endLine":5,"endColumn":13},{"ruleId":"305","severity":1,"message":"306","line":18,"column":5,"nodeType":"307","messageId":"308","endLine":20,"endColumn":6},{"ruleId":"298","severity":1,"message":"309","line":5,"column":8,"nodeType":"300","messageId":"301","endLine":5,"endColumn":12},{"ruleId":"298","severity":1,"message":"310","line":6,"column":8,"nodeType":"300","messageId":"301","endLine":6,"endColumn":17},{"ruleId":"298","severity":1,"message":"311","line":7,"column":8,"nodeType":"300","messageId":"301","endLine":7,"endColumn":19},{"ruleId":"298","severity":1,"message":"312","line":9,"column":8,"nodeType":"300","messageId":"301","endLine":9,"endColumn":11},{"ruleId":"298","severity":1,"message":"313","line":11,"column":8,"nodeType":"300","messageId":"301","endLine":11,"endColumn":12},{"ruleId":"298","severity":1,"message":"314","line":14,"column":9,"nodeType":"300","messageId":"301","endLine":14,"endColumn":16},{"ruleId":"298","severity":1,"message":"309","line":6,"column":8,"nodeType":"300","messageId":"301","endLine":6,"endColumn":12},{"ruleId":"298","severity":1,"message":"310","line":7,"column":8,"nodeType":"300","messageId":"301","endLine":7,"endColumn":17},{"ruleId":"298","severity":1,"message":"311","line":8,"column":8,"nodeType":"300","messageId":"301","endLine":8,"endColumn":19},{"ruleId":"298","severity":1,"message":"315","line":9,"column":8,"nodeType":"300","messageId":"301","endLine":9,"endColumn":14},{"ruleId":"298","severity":1,"message":"304","line":7,"column":9,"nodeType":"300","messageId":"301","endLine":7,"endColumn":13},{"ruleId":"298","severity":1,"message":"316","line":8,"column":9,"nodeType":"300","messageId":"301","endLine":8,"endColumn":20},{"ruleId":"317","severity":1,"message":"318","line":58,"column":9,"nodeType":"319","messageId":"320","endLine":58,"endColumn":21,"fix":"321"},{"ruleId":"298","severity":1,"message":"316","line":9,"column":36,"nodeType":"300","messageId":"301","endLine":9,"endColumn":47},{"ruleId":"298","severity":1,"message":"313","line":11,"column":8,"nodeType":"300","messageId":"301","endLine":11,"endColumn":12},{"ruleId":"298","severity":1,"message":"309","line":5,"column":8,"nodeType":"300","messageId":"301","endLine":5,"endColumn":12},{"ruleId":"298","severity":1,"message":"310","line":6,"column":8,"nodeType":"300","messageId":"301","endLine":6,"endColumn":17},{"ruleId":"298","severity":1,"message":"322","line":10,"column":8,"nodeType":"300","messageId":"301","endLine":10,"endColumn":17},{"ruleId":"323","severity":1,"message":"324","line":24,"column":1,"nodeType":"325","endLine":29,"endColumn":3},{"ruleId":"298","severity":1,"message":"303","line":2,"column":9,"nodeType":"300","messageId":"301","endLine":2,"endColumn":14},{"ruleId":"298","severity":1,"message":"326","line":3,"column":9,"nodeType":"300","messageId":"301","endLine":3,"endColumn":23},{"ruleId":"298","severity":1,"message":"327","line":2,"column":9,"nodeType":"300","messageId":"301","endLine":2,"endColumn":24},{"ruleId":"305","severity":1,"message":"306","line":5,"column":5,"nodeType":"307","messageId":"308","endLine":7,"endColumn":6},{"ruleId":"298","severity":1,"message":"328","line":3,"column":8,"nodeType":"300","messageId":"301","endLine":3,"endColumn":11},{"ruleId":"298","severity":1,"message":"329","line":1,"column":16,"nodeType":"300","messageId":"301","endLine":1,"endColumn":24},{"ruleId":"298","severity":1,"message":"330","line":4,"column":9,"nodeType":"300","messageId":"301","endLine":4,"endColumn":13},{"ruleId":"298","severity":1,"message":"331","line":5,"column":9,"nodeType":"300","messageId":"301","endLine":5,"endColumn":19},{"ruleId":"298","severity":1,"message":"315","line":4,"column":8,"nodeType":"300","messageId":"301","endLine":4,"endColumn":14},{"ruleId":"298","severity":1,"message":"302","line":2,"column":8,"nodeType":"300","messageId":"301","endLine":2,"endColumn":17},{"ruleId":"298","severity":1,"message":"332","line":3,"column":8,"nodeType":"300","messageId":"301","endLine":3,"endColumn":11},{"ruleId":"298","severity":1,"message":"328","line":4,"column":8,"nodeType":"300","messageId":"301","endLine":4,"endColumn":11},{"ruleId":"298","severity":1,"message":"310","line":6,"column":8,"nodeType":"300","messageId":"301","endLine":6,"endColumn":17},{"ruleId":"298","severity":1,"message":"315","line":7,"column":8,"nodeType":"300","messageId":"301","endLine":7,"endColumn":14},{"ruleId":"298","severity":1,"message":"304","line":6,"column":9,"nodeType":"300","messageId":"301","endLine":6,"endColumn":13},{"ruleId":"298","severity":1,"message":"315","line":6,"column":8,"nodeType":"300","messageId":"301","endLine":6,"endColumn":14},{"ruleId":"298","severity":1,"message":"314","line":8,"column":8,"nodeType":"300","messageId":"301","endLine":8,"endColumn":15},{"ruleId":"298","severity":1,"message":"304","line":9,"column":9,"nodeType":"300","messageId":"301","endLine":9,"endColumn":13},{"ruleId":"298","severity":1,"message":"314","line":12,"column":8,"nodeType":"300","messageId":"301","endLine":12,"endColumn":15},{"ruleId":"317","severity":1,"message":"318","line":107,"column":9,"nodeType":"319","messageId":"320","endLine":107,"endColumn":23,"fix":"333"},{"ruleId":"298","severity":1,"message":"315","line":4,"column":8,"nodeType":"300","messageId":"301","endLine":4,"endColumn":14},{"ruleId":"298","severity":1,"message":"332","line":3,"column":8,"nodeType":"300","messageId":"301","endLine":3,"endColumn":11},{"ruleId":"298","severity":1,"message":"328","line":4,"column":8,"nodeType":"300","messageId":"301","endLine":4,"endColumn":11},{"ruleId":"298","severity":1,"message":"334","line":6,"column":17,"nodeType":"300","messageId":"301","endLine":6,"endColumn":22},{"ruleId":"298","severity":1,"message":"332","line":3,"column":8,"nodeType":"300","messageId":"301","endLine":3,"endColumn":11},{"ruleId":"298","severity":1,"message":"328","line":4,"column":8,"nodeType":"300","messageId":"301","endLine":4,"endColumn":11},{"ruleId":"298","severity":1,"message":"304","line":8,"column":9,"nodeType":"300","messageId":"301","endLine":8,"endColumn":13},"no-native-reassign",["335"],"no-negated-in-lhs",["336"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'toast' is defined but never used.","'Link' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Form' is defined but never used.","'FormGroup' is defined but never used.","'FormControl' is defined but never used.","'Joi' is defined but never used.","'Card' is defined but never used.","'CardImg' is defined but never used.","'Button' is defined but never used.","'loggedAdmin' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property name.","MemberExpression","unexpectedWhitespace",{"range":"337","text":"338"},"'FormLabel' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'getCurrentUser' is defined but never used.","'getCurrentAdmin' is defined but never used.","'Col' is defined but never used.","'useState' is defined but never used.","'Fade' is defined but never used.","'Transition' is defined but never used.","'Row' is defined but never used.",{"range":"339","text":"338"},"'Image' is defined but never used.","no-global-assign","no-unsafe-negation",[1698,1699],"",[3295,3296]]