[{"/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/index.js":"1","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/reportWebVitals.js":"2","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/App.js":"3","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/services/adminLoginService.js":"4","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/services/userLoginService.js":"5","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/components/navigation.jsx":"6","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/pages/products.jsx":"7","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/pages/basket.jsx":"8","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/pages/user/userProfile.jsx":"9","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/pages/user/userLoginForm.jsx":"10","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/admin/admin/adminPanel.jsx":"11","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/admin/admin/adminLoginForm.jsx":"12","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/admin/admin/allAdminsList.jsx":"13","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/admin/admin/registerAdminForm.jsx":"14","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/admin/admin/updateAdminForm.jsx":"15","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/admin/user/registerUserForm.jsx":"16","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/services/httpService.js":"17","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/services/adminService.js":"18","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/services/imgService.js":"19","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/services/userService.js":"20","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/components/product.jsx":"21","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/pages/user/registerUserFormUsr.jsx":"22","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/components/usercard.jsx":"23","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/components/userDeleteAlert.jsx":"24"},{"size":729,"mtime":1607687132000,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1607679022000,"results":"27","hashOfConfig":"26"},{"size":2696,"mtime":1610694170535,"results":"28","hashOfConfig":"26"},{"size":990,"mtime":1609244435000,"results":"29","hashOfConfig":"26"},{"size":925,"mtime":1609244602000,"results":"30","hashOfConfig":"26"},{"size":2011,"mtime":1607687753000,"results":"31","hashOfConfig":"26"},{"size":1425,"mtime":1610572344212,"results":"32","hashOfConfig":"26"},{"size":1545,"mtime":1610572344200,"results":"33","hashOfConfig":"26"},{"size":3454,"mtime":1610715085793,"results":"34","hashOfConfig":"26"},{"size":6743,"mtime":1610709274439,"results":"35","hashOfConfig":"26"},{"size":2412,"mtime":1609235274000,"results":"36","hashOfConfig":"26"},{"size":6743,"mtime":1609746645000,"results":"37","hashOfConfig":"26"},{"size":3553,"mtime":1609239136000,"results":"38","hashOfConfig":"26"},{"size":6674,"mtime":1609152992000,"results":"39","hashOfConfig":"26"},{"size":7505,"mtime":1609157796000,"results":"40","hashOfConfig":"26"},{"size":12813,"mtime":1610622720034,"results":"41","hashOfConfig":"26"},{"size":655,"mtime":1608290582000,"results":"42","hashOfConfig":"26"},{"size":1497,"mtime":1609237628000,"results":"43","hashOfConfig":"26"},{"size":692,"mtime":1610615157630,"results":"44","hashOfConfig":"26"},{"size":2158,"mtime":1610625626595,"results":"45","hashOfConfig":"26"},{"size":468,"mtime":1608631258000,"results":"46","hashOfConfig":"26"},{"size":13226,"mtime":1610694353253,"results":"47","hashOfConfig":"26"},{"size":917,"mtime":1610699463254,"results":"48","hashOfConfig":"26"},{"size":886,"mtime":1610715646904,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"10gc3h",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"52"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/index.js",[],["111","112"],"/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/reportWebVitals.js",[],"/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/App.js",["113","114"],"import React,{Component} from \"react\";\nimport {Route, Redirect, Switch} from \"react-router-dom\";\nimport {ToastContainer} from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport Container from 'react-bootstrap/Container';\nimport Navigation from \"./components/navigation\";\nimport AdminLoginForm from \"./admin/admin/adminLoginForm\";\nimport RegisterAdminForm from \"./admin/admin/registerAdminForm\";\nimport {getCurrentAdmin} from \"./services/adminLoginService\";\nimport {getCurrentUser} from \"./services/userLoginService\";\nimport AdminPanel from \"./admin/admin/adminPanel\";\nimport Products from \"./pages/products\";\nimport Basket from \"./pages/basket\";\nimport AllAdminsList from \"./admin/admin/allAdminsList\";\nimport UpdateAdminForm from \"./admin/admin/updateAdminForm\";\nimport UserLoginForm from \"./pages/user/userLoginForm\";\nimport UserProfile from \"./pages/user/userProfile\";\nimport RegisterUserForm from \"./admin/user/registerUserForm\";\nimport RegisterUserFormUsr from \"./pages/user/registerUserFormUsr\";\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            admin:null,\n            user:null\n        }\n    }\n\n    componentDidMount() {\n        const admin = getCurrentAdmin();\n        const user = getCurrentUser();\n        this.setState({admin,user})\n        console.log(admin,user);\n    }\n\n    render() {\n        return (\n            <div>\n                <ToastContainer/>\n                    <Navigation/>\n                    <Switch>\n                        <Route path=\"/adminlogin\" component={AdminLoginForm}/>\n                        <Route path=\"/userregister\" component={RegisterUserFormUsr}/>\n                        <Route path=\"/userlogin\" component={UserLoginForm}/>\n                        {this.state.user !== null &&\n                        <Route path=\"/userprofile\" component={UserProfile}/>}\n                        <Route path=\"/products\" component={Products}/>\n                        <Route path=\"/basket\" component={Basket}/>\n                        {this.state.admin &&\n                        <Switch>\n                            <Route path=\"/admin/registeradmin\" component={RegisterAdminForm}/>\n                            <Route path=\"/admin/adminslist/:id\" component={UpdateAdminForm}/>\n                            <Route path=\"/admin/adminslist\" component={AllAdminsList}/>\n                            <Route path=\"/admin/registeruser\" component={RegisterUserForm}/>\n                            <Route path=\"/admin\" component={AdminPanel}/>\n                        </Switch>}\n                    </Switch>\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/services/adminLoginService.js",[],"/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/services/userLoginService.js",[],"/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/components/navigation.jsx",["115"],"import React, {Component} from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport'../css/navigation.css'\nimport {NavLink} from \"react-bootstrap\";\n\nclass Navigation extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n\n    render() {\n        return (\n            <div>\n                <header>\n                    <Navbar className=\"app-navbar p-3 px-5\" expand=\"xl\">\n                        <NavLink className=\"pb-0\" to=\"/\">Momo Design</NavLink>\n                        <Navbar.Toggle className=\"border-0\" aria-controls=\"navbar-toggle\"/>\n                        <Navbar.Collapse id=\"navbar-toggle\">\n                            <Nav className=\"ml-auto pr-2\">\n                                <NavLink className=\"app-navbar-link\" to=\"/\">\n                                    <span> One</span>\n                                </NavLink>\n                                <NavLink className=\"app-navbar-link\" to=\"/news\">\n                                    <span> Two</span>\n                                </NavLink>\n                                <NavLink className=\"app-navbar-link\" to=\"/clubbio\">\n                                    <span> Three</span>\n                                </NavLink>\n                                <NavLink  className=\"app-navbar-link\" to=\"/schedule\">\n                                    <span> Four</span>\n                                </NavLink>\n                                <NavLink  className=\"app-navbar-link\" to=\"/events\">\n                                    <span> Five</span>\n                                </NavLink>\n                                <NavLink  className=\"app-navbar-link\" to=\"/contacts\">\n                                    <span> Six</span>\n                                </NavLink>\n                            </Nav>\n                        </Navbar.Collapse>\n                    </Navbar>\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default Navigation;\n","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/pages/products.jsx",[],"/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/pages/basket.jsx",[],"/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/pages/user/userProfile.jsx",["116","117","118","119","120","121","122","123"],"/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/pages/user/userLoginForm.jsx",[],"/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/admin/admin/adminPanel.jsx",["124"],"import React, {Component} from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport {getCurrentAdmin,adminLogout} from \"../../services/adminLoginService\";\nimport jwtDecode from \"jwt-decode\";\nimport Button from \"react-bootstrap/Button\";\nimport Table from \"react-bootstrap/Table\";\nimport {Link} from \"react-router-dom\";\nimport {loggedAdmin} from \"../../services/adminService\";\n\n\nclass AdminPanel extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            admin:[],\n        }\n    }\n\n    async componentDidMount() {\n        const jwtAdmin = getCurrentAdmin();\n        const admin = jwtDecode(jwtAdmin);\n        this.setState({admin});\n        // console.log(aha);\n    }\n\n    logoutAdmin = () =>{\n        adminLogout();\n        this.props.history.push(\"/adminlogin\");\n    }\n\n    render() {\n        return (\n            <div>\n                <Container>\n                    <h3>Logged as: {this.state.admin.adminName}</h3>\n                    <Table>\n                        <thead>\n                            <tr>\n                                <th>Element name</th>\n                                <th>Create new</th>\n                                <th>To list</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>Admins</td>\n                                <td>\n                                    <Link to=\"/admin/registeradmin\">\n                                        Register\n                                    </Link>\n                                </td>\n                                <td>\n                                    <Link to=\"/admin/adminslist\">\n                                        All Admins list\n                                    </Link>\n                                </td>\n                            </tr>\n                        <tr>\n                            <td>Users</td>\n                            <td>Register</td>\n                            <td>All Users list</td>\n                        </tr>\n                        </tbody>\n                    </Table>\n                    <Button\n                        onClick={this.logoutAdmin}>\n                        Logout\n                    </Button>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default AdminPanel;\n","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/admin/admin/adminLoginForm.jsx",["125"],"import React, {Component} from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport Joi from \"joi\";\nimport {toast} from \"react-toastify\";\nimport Card from \"react-bootstrap/Card\";\nimport {adminLogin, getCurrentAdmin} from \"../../services/adminLoginService\";\nimport jwtDecode from \"jwt-decode\";\n\n\nclass AdminLoginForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            adminEmail: '',\n            adminPassword: '',\n            errors: {},\n            isDisabled: false,\n            loggedAdmin: ''\n        }\n    };\n\n    schema = Joi.object({\n        adminEmail: Joi.string()\n            .required()\n            .min(5)\n            .max(50)\n            .label(\"AdminEmail\"),\n        adminPassword: Joi.string()\n            .required()\n            .min(8)\n            .max(255)\n            .label(\"AdminPassword\")\n    });\n\n\n     componentDidMount() {\n        const loggedAdmin = getCurrentAdmin();\n        this.setState({loggedAdmin});\n    }\n\n\n\n    handleChange = (event) => {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n        const errors = this.validate();\n        this.setState({errors: errors || {}});\n        if (errors) return;\n        console.log('Form submitted.');\n\n        const admin = {adminEmail: this.state.adminEmail, adminPassword: this.state.adminPassword};\n        await adminLogin(admin);\n\n        toast.success('Admin logged successfully!');\n        this.setState({isDisabled: true});\n    }\n\n    validate = () => {\n        const admin = {adminEmail: this.state.adminEmail, adminPassword: this.state.adminPassword};\n        const options = {abortEarly: false};\n        const result = this.schema.validate(admin, options);\n        // console.log(result);\n\n        if (!result.error) return null;\n        const errors = {};\n        for (let item of result.error.details)\n            errors[item.path[0]] = item.message;\n        return errors;\n    };\n\n\n\n    render() {\n        return (\n            <div>\n                <Container className=\"container bg-danger\" fluid={true} style={{width:5000}}>\n                    {this.state.loggedAdmin === null &&\n                    <Row className=\"m-0\">\n                        <Col>\n                            <Row className=\"bg-light\">\n                                <h4>Login for the Admin panel:</h4>\n                            </Row>\n                            <Card className=\"bg-dark\">\n                                <Form onSubmit={this.handleSubmit}>\n                                    <FormGroup className=\"py-5\">\n                                        <Row>\n                                            <Col>\n                                                <FormControl\n                                                    autoFocus={true}\n                                                    id=\"adminEmail\"\n                                                    name=\"adminEmail\"\n                                                    type=\"email\"\n                                                    placeholder={\"Admin email\"}\n                                                    value={this.state.adminEmail}\n                                                    onChange={this.handleChange}/>\n                                                {this.state.errors.adminEmail &&\n                                                <p className=\"text-danger pt-2\">\n                                                    {this.state.errors.adminEmail}\n                                                </p>}\n                                            </Col>\n                                            <Col>\n                                                <FormControl\n                                                    id=\"adminPassword\"\n                                                    name=\"adminPassword\"\n                                                    type=\"password\"\n                                                    placeholder={\"Admin password\"}\n                                                    value={this.state.adminPassword}\n                                                    onChange={this.handleChange}/>\n                                                {this.state.errors.adminPassword &&\n                                                <p className=\"text-danger pt-2\">\n                                                    {this.state.errors.adminPassword}\n                                                </p>}\n                                            </Col>\n                                        </Row>\n                                    </FormGroup>\n                                    <Row className=\"py-2\">\n                                        <Col>\n                                            <Row className=\"justify-content-end px-3\">\n                                                {this.state.isDisabled &&\n                                                <Button href=\"/admin\">\n                                                    ADMIN PANEL\n                                                </Button>\n                                                }\n                                            </Row>\n                                        </Col>\n                                        <Col>\n                                            <Row className=\"justify-content-end px-3\">\n                                                <Button\n                                                    disabled={this.state.isDisabled}\n                                                    type=\"submit\">\n                                                    SUBMIT\n                                                </Button>\n                                            </Row>\n                                        </Col>\n                                    </Row>\n                                </Form>\n                            </Card>\n                        </Col>\n                    </Row>\n                    }\n                    {this.state.loggedAdmin &&\n                    <Row>\n                        <h3>YOU ARE ALREADY LOGGED IN!</h3>\n                    </Row>}\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default AdminLoginForm;\n","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/admin/admin/allAdminsList.jsx",["126"],"import React, {Component} from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Table from \"react-bootstrap/Table\";\nimport {Link} from \"react-router-dom\";\nimport {toast} from \"react-toastify\";\nimport {deleteAdmin, getAllAdmins, loggedAdmin} from \"../../services/adminService\";\n\nclass AllAdminsList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            admins: [],\n        }\n    }\n\n\n    async componentDidMount() {\n        const {data: admins} = await getAllAdmins();\n        this.setState({admins});\n    }\n\n\n    handleDelete = async (admin) => {\n        const allAdmins = this.state.admins;\n        const admins = allAdmins.filter(a => a._id !== admin._id);\n        this.setState({admins});\n\n        try {\n            await deleteAdmin(admin._id);\n            toast.success(`Admin : ${admin.adminName} was successfully deleted!`);\n        } catch (e) {\n            if (e.response && e.response.status === 404) console.log(\"Admin with the given ID was not found!\");\n            toast.error(\"This Admin has already been deleted.\");\n            this.setState({admins: allAdmins});\n        }\n    }\n\n\n    adminRedirect = () => {\n        this.props.history.push(\"/admin\");\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Container>\n                    <Row>\n                        <Col>\n                            <h2>All registered Admins table :</h2>\n                        </Col>\n                        <Col>\n                            <Button onClick={this.adminRedirect}>\n                                BACK TO ADMIN PANEL\n                            </Button>\n                        </Col>\n                    </Row>\n                    <Table>\n                        <thead>\n                        <tr>\n                            <th>Full name</th>\n                            <th>Email</th>\n                            <th>Admin rights</th>\n                            <th>Update</th>\n                            <th>Delete</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {this.state.admins.map(adm => {\n                            return (\n                                <tr key={adm._id}>\n                                    <td>{adm.adminName}</td>\n                                    <td>{adm.adminEmail}</td>\n                                    {adm.isAdmin && <td>admin</td>}\n                                    {!adm.isAdmin && <td>suspended</td>}\n                                    <td>\n                                        <Link\n                                            to={`/admin/adminslist/${adm._id}`}>\n                                            Update admin\n                                        </Link>\n                                    </td>\n                                    <td>\n                                        <Button\n                                            onClick={() => this.handleDelete(adm)}>\n                                            Delete admin\n                                        </Button>\n                                    </td>\n                                </tr>\n                            )\n                        })}\n                        </tbody>\n                    </Table>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default AllAdminsList;\n","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/admin/admin/registerAdminForm.jsx",[],"/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/admin/admin/updateAdminForm.jsx",["127"],"import React, {Component} from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Joi from \"joi\";\nimport Form from \"react-bootstrap/Form\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport {toast} from \"react-toastify\";\nimport {FormLabel} from \"react-bootstrap\";\nimport FormCheck from \"react-bootstrap/FormCheck\";\nimport {getAdmin, updateAdmin} from \"../../services/adminService\";\n\nclass UpdateAdminForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            admin: {\n                adminName:\"\",\n                adminEmail:\"\",\n                adminPassword:\"\",\n                isAdmin: false\n            },\n            errors:{},\n            isDisabled:true\n        }\n\n    }\n\n    schema = Joi.object({\n        _id: Joi.string(),\n        adminName: Joi.string()\n            .required()\n            .min(5)\n            .max(50)\n            .label(\"Admin Name\"),\n        adminEmail: Joi.string()\n            .required()\n            .min(5)\n            .max(50)\n            .label(\"Admin Email\"),\n        adminPassword: Joi.string()\n            .required()\n            .min(8)\n            .max(255)\n            .label(\"Admin Password\"),\n        isAdmin: Joi.boolean()\n            .label(\"Is Admin\")\n    });\n\n\n    handleChange = (event) =>{\n        const admin = {...this.state.admin};\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        admin [name] = value;\n        this.setState({\n            admin,\n            isDisabled: false\n        })\n    }\n\n\n    async populateAdmin(){\n        try{\n            const adminId = this.props.match.params.id;\n            const {data: admin} = await getAdmin(adminId);\n            this.setState({admin: this.mapToViewModel(admin)});\n        }catch (e) {\n            if(e.response && e.response.status === 404)\n                console.log('There is no Admin with the given ID!');\n        }\n    }\n\n    async componentDidMount() {\n        await this.populateAdmin();\n    }\n\n    mapToViewModel(admin){\n        return {\n            _id: admin._id,\n            adminName: admin.adminName,\n            adminEmail: admin.adminEmail,\n            adminPassword: admin.adminPassword,\n            isAdmin: admin.isAdmin\n        };\n    }\n\n\n    handleSubmit = async (event) =>{\n        event.preventDefault();\n        const errors = this.validateAdminInput();\n        this.setState({errors: errors || {}});\n        if(errors) return;\n\n        const admin = {\n            adminName: this.state.admin.adminName,\n            adminEmail: this.state.admin.adminEmail,\n            adminPassword: this.state.admin.adminPassword,\n            isAdmin: this.state.admin.isAdmin\n        };\n\n        await updateAdmin(admin,this.state.admin._id);\n        this.setState({isDisabled: true});\n        toast.success('Admin update was successful!');\n    }\n\n\n    validateAdminInput = () => {\n        const admin = {\n            adminName: this.state.admin.adminName,\n            adminEmail: this.state.admin.adminEmail,\n            adminPassword: this.state.admin.adminPassword,\n            isAdmin: this.state.admin.isAdmin\n        };\n        const options = {abortEarly: false};\n        const result = this.schema.validate(admin,options);\n        console.log(result);\n\n        if(!result.error) return null;\n        const errors = {};\n        for (let item of result.error.details)\n            errors[item.path[0]] = item.message;\n        return errors;\n    }\n\n\n    adminRedirect = () => {\n        this.props.history.push(\"/admin/adminslist\")\n    }\n\n\n    render() {\n        return (\n            <div>\n              <Container>\n                  <Form onSubmit={this.handleSubmit}>\n                      <FormGroup>\n                          <FormLabel>\n                              Admin Name\n                          </FormLabel>\n                          <FormControl\n                              autoFocus={true}\n                              id=\"adminName\"\n                              name=\"adminName\"\n                              type=\"text\"\n                              value={this.state.admin.adminName}\n                              placeholder=\"Enter Admin's name\"\n                              onChange={this.handleChange}/>\n                          {this.state.errors.adminName &&\n                          <span className=\"text-danger pt-2\">\n                                {this.state.errors.adminName}\n                            </span>}\n                      </FormGroup>\n                      <FormGroup>\n                          <FormLabel>\n                              Admin Email\n                          </FormLabel>\n                          <FormControl\n                              id=\"adminEmail\"\n                              name=\"adminEmail\"\n                              type=\"email\"\n                              value={this.state.admin.adminEmail}\n                              placeholder=\"Enter Admin's email\"\n                              onChange={this.handleChange}/>\n                          {this.state.errors.adminEmail &&\n                          <span className=\"text-danger pt-2\">\n                                {this.state.errors.adminEmail}\n                            </span>}\n                      </FormGroup>\n                      <FormGroup>\n                          <FormLabel>\n                              Admin Password\n                          </FormLabel>\n                          <FormControl\n                              id=\"adminPassword\"\n                              name=\"adminPassword\"\n                              type=\"password\"\n                              value={this.state.admin.adminPassword}\n                              placeholder=\"Enter Admin's password\"\n                              onChange={this.handleChange}/>\n                          {this.state.errors.adminPassword &&\n                          <span className=\"text-danger pt-2\">\n                                {this.state.errors.adminPassword}\n                            </span>}\n                      </FormGroup>\n                      <FormGroup>\n                          <FormCheck\n                              id=\"isAdmin\"\n                              name=\"isAdmin\"\n                              type=\"checkbox\"\n                              value={this.state.admin.isAdmin}\n                              label=\"Define Admin rights\"\n                              onChange={this.handleChange}/>\n                      </FormGroup>\n                      <Row>\n                          <Col>\n                              <Button\n                                  type=\"submit\"\n                                  disabled={this.state.isDisabled}>\n                                  UPDATE ADMIN\n                              </Button>\n                          </Col>\n                          <Col>\n                              <Button\n                                  onClick={this.adminRedirect}>\n                                  BACK TO ADMINS LIST\n                              </Button>\n                          </Col>\n                      </Row>\n                  </Form>\n              </Container>\n            </div>\n        );\n    }\n}\n\nexport default UpdateAdminForm;\n","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/admin/user/registerUserForm.jsx",["128"],"import React, {Component} from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport Joi from \"joi\";\nimport {toast} from \"react-toastify\";\nimport Card from \"react-bootstrap/Card\";\nimport {CardImg, FormLabel} from \"react-bootstrap\";\nimport {uploadImageAdmin} from \"../../services/imgService\";\nimport {registerUserAdmin} from \"../../services/userService\";\n\nclass RegisterUserForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userName: '',\n            userFamily: '',\n            userPassword: '',\n            userPicture: '',\n            userEmail: '',\n            userAddress: '',\n            userTelephone: '',\n            errors: {},\n            isDisabled: true,\n            showPicture: '',\n            uploadPicture: ''\n        }\n    }\n\n    schema = Joi.object({\n        userName: Joi.string()\n            .required()\n            .min(3)\n            .max(30)\n            .trim(true)\n            .label(\"First name\"),\n        userFamily: Joi.string()\n            .required()\n            .min(3)\n            .max(30)\n            .trim(true)\n            .label(\"Second name\"),\n        userPassword: Joi.string()\n            .required()\n            .min(8)\n            .max(255)\n            .trim(true)\n            .label(\"Password\"),\n        userEmail: Joi.string()\n            .required()\n            .min(5)\n            .max(50)\n            .trim(true)\n            .label(\"Email\"),\n        userPicture: Joi.string()\n            .required()\n            .min(5)\n            .max(50)\n            .label(\"Profile picture\"),\n        userAddress: Joi.string()\n            .required()\n            .min(5)\n            .max(100)\n            .trim(true)\n            .label(\"Address\"),\n        userTelephone: Joi.string()\n            .required()\n            .min(5)\n            .max(50)\n            .label(\"Personal telephone\")\n    })\n\n\n    handleChange = (event) => {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value,\n            isDisabled: false\n        });\n    }\n\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n        const errors = this.validateUserInput();\n        this.setState({errors: errors || {}});\n        console.log(errors);\n        if (errors) return;\n\n        this.setState({isDisabled: true});\n\n        const data = new FormData();\n        data.append('file', this.state.uploadPicture);\n        await uploadImageAdmin(data);\n        if (this.state.uploadPicture === null) {\n            toast.error('You must select profile image to upload!');\n            return;\n        }\n        toast.success('The profile image was successfully uploaded!');\n        console.log('User profile image was uploaded to gallery');\n\n        const user = {\n            userName: this.state.userName,\n            userFamily: this.state.userFamily,\n            userPassword: this.state.userPassword,\n            userEmail: this.state.userEmail,\n            userPicture: this.state.userPicture,\n            userAddress: this.state.userAddress,\n            userTelephone: this.state.userTelephone\n        };\n\n        await registerUserAdmin(user);\n        toast.success('The user was successfully registered!');\n    }\n\n\n    validateUserInput = () => {\n        const user = {\n            userName: this.state.userName,\n            userFamily: this.state.userFamily,\n            userPassword: this.state.userPassword,\n            userEmail: this.state.userEmail,\n            userPicture: this.state.userPicture,\n            userAddress: this.state.userAddress,\n            userTelephone: this.state.userTelephone\n        };\n        const options = {abortEarly: false};\n        const result = this.schema.validate(user, options);\n\n        if (!result.error) return null;\n\n        const errors = {};\n        for (let item of result.error.details)\n            errors[item.path[0]] = item.message;\n        return errors;\n    }\n\n\n    onImageHandler = (event) => {\n        this.setState({\n            showPicture: URL.createObjectURL(event.target.files[0]),\n            uploadPicture: event.target.files[0],\n            userPicture: event.target.files[0].name,\n            isDisabled: false\n        })\n    }\n\n\n    adminRedirect = () => {\n        this.props.history.push(\"/admin\");\n    }\n\n    render() {\n        return (\n            <div>\n                <Container className=\"container\" fluid={true}>\n                    <Row>\n                        <Col>\n                            <Row>\n                                <h3>Register User Form</h3>\n                            </Row>\n                            <Form onSubmit={this.handleSubmit}>\n                                <FormGroup>\n                                    <FormLabel htmlFor=\"image\">\n                                        Upload user profile image :\n                                    </FormLabel>\n                                    <Form.File\n                                        id=\"image\"\n                                        name=\"image\"\n                                        onChange={this.onImageHandler}/>\n                                </FormGroup>\n                                <CardImg\n                                    src={this.state.showPicture}\n                                    style={{width: 300}}/>\n                                <Row>\n                                    <Col>\n                                        <FormGroup>\n                                            <FormLabel>First name :</FormLabel>\n                                            <FormControl\n                                                autoFocus={true}\n                                                name=\"userName\"\n                                                type=\"text\"\n                                                value={this.state.userName}\n                                                placeholder=\"Enter user's first name\"\n                                                onChange={this.handleChange}/>\n                                            {this.state.errors.userName &&\n                                            <p className=\"text-danger pt-2\">\n                                                {this.state.errors.userName}\n                                            </p>}\n                                        </FormGroup>\n                                    </Col>\n                                    <Col>\n                                        <FormGroup>\n                                            <FormLabel>Second name :</FormLabel>\n                                            <FormControl\n                                                name=\"userFamily\"\n                                                type=\"text\"\n                                                value={this.state.userFamily}\n                                                placeholder=\"Enter user's second name\"\n                                                onChange={this.handleChange}/>\n                                            {this.state.errors.userFamily &&\n                                            <p className=\"text-danger pt-2\">\n                                                {this.state.errors.userFamily}\n                                            </p>}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <FormGroup>\n                                    <FormLabel>Address :</FormLabel>\n                                    <FormControl\n                                        name=\"userAddress\"\n                                        type=\"text\"\n                                        value={this.state.userAddress}\n                                        placeholder=\"Enter user's address: country / city / street / postal code\"\n                                        onChange={this.handleChange}/>\n                                    {this.state.errors.userAddress &&\n                                    <p className=\"text-danger pt-2\">\n                                        {this.state.errors.userAddress}\n                                    </p>}\n                                </FormGroup>\n                                <Row>\n                                    <Col>\n                                        <FormGroup>\n                                            <FormLabel>E-mail :</FormLabel>\n                                            <FormControl\n                                                name=\"userEmail\"\n                                                type=\"email\"\n                                                value={this.state.userEmail}\n                                                placeholder=\"Enter user's e-mail address\"\n                                                onChange={this.handleChange}/>\n                                            {this.state.errors.userEmail &&\n                                            <p className=\"text-danger pt-2\">\n                                                {this.state.errors.userEmail}\n                                            </p>}\n                                        </FormGroup>\n                                    </Col>\n                                    <Col>\n                                        <FormGroup>\n                                            <FormLabel>Telephone :</FormLabel>\n                                            <FormControl\n                                                name=\"userTelephone\"\n                                                type=\"text\"\n                                                value={this.state.userTelephone}\n                                                placeholder=\"Enter user's telephone number\"\n                                                onChange={this.handleChange}/>\n                                            {this.state.errors.userTelephone &&\n                                            <p className=\"text-danger pt-2\">\n                                                {this.state.errors.userTelephone}\n                                            </p>}\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <FormGroup>\n                                    <FormLabel>Password</FormLabel>\n                                    <FormControl\n                                        name=\"userPassword\"\n                                        type=\"password\"\n                                        value={this.state.userPassword}\n                                        placeholder=\"Enter user's password : min. 8 symbols\"\n                                        onChange={this.handleChange}/>\n                                    {this.state.errors.userPassword &&\n                                    <p className=\"text-danger pt-2\">\n                                        {this.state.errors.userPassword}\n                                    </p>}\n                                </FormGroup>\n                                <Row className=\"mt-3\">\n                                    <Col md={4}>\n                                        <Button\n                                            className=\"admin-button-submit\"\n                                            type=\"submit\"\n                                            disabled={this.state.isDisabled}>\n                                            SUBMIT\n                                        </Button>\n                                    </Col>\n                                    <Col md={{span: 4, offset: 4}} className=\"d-flex flex-row-reverse\">\n                                        <Button\n                                            className=\"admin-button-update\"\n                                            onClick={this.adminRedirect}>\n                                            BACK TO ADMIN PANEL\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </Form>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default RegisterUserForm;\n","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/services/httpService.js",["129"],"import axios from \"axios\";\nimport {toast} from \"react-toastify\";\n\naxios.interceptors.response.use(success =>{\n    console.log(success);\n    return(success);\n},error => {\n    const expectedError = error.response &&\n        error.response.status >=400 &&\n        error.response.status <500;\n    if(!expectedError){\n        console.log(error.response);\n        toast.error(error.response.data);\n    }\n    if(!expectedError){\n        console.log(error);\n        toast.error('An Unexpected error occured!');\n    }\n    return Promise.reject(error);\n});\n\nexport default {\n    get: axios.get,\n    post: axios.post,\n    put: axios.put,\n    delete: axios.delete\n};\n","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/services/adminService.js",["130"],"import httpService from \"./httpService\";\nimport {toast} from \"react-toastify\";\nimport {getCurrentAdmin} from \"./adminLoginService\";\nimport {apiUrl} from \"../config.json\";\n\nconst apiEndPoint = apiUrl + \"/admins\";\n\nfunction adminUrl(adminId) {\n    return `${apiEndPoint}/${adminId}`;\n}\n\n\nexport function getAdmin(adminId) {\n    return httpService\n        .get(adminUrl(adminId), {\n            headers: {\n                'x-auth-token': getCurrentAdmin()\n            }\n        })\n}\n\n\nexport function getAllAdmins() {\n    return httpService\n        .get(apiEndPoint, {\n            headers: {\n                'x-auth-token': getCurrentAdmin()\n            }\n        });\n}\n\n\nexport function registerAdmin(admin) {\n    return httpService\n        .post(apiEndPoint, admin,{\n            headers: {\n                'x-auth-token': getCurrentAdmin()\n            }\n        });\n}\n\n\nexport function updateAdmin(admin, adminId) {\n    const body = {...admin};\n    return httpService\n        .put(adminUrl(adminId), body, {\n            headers: {\n                'x-auth-token': getCurrentAdmin()\n            }\n        });\n}\n\n\nexport function deleteAdmin(adminId) {\n    return httpService\n        .delete(adminUrl(adminId), {\n            headers: {\n                'x-auth-token': getCurrentAdmin()\n            }\n        })\n}\n\n\nexport function loggedAdmin(){\n    return httpService\n        .get(apiEndPoint+\"/adm\",{\n            headers:{\n                'x-auth-token': getCurrentAdmin()\n            }\n        })\n}\n","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/services/imgService.js",["131"],"import httpService from \"./httpService\";\nimport {getCurrentAdmin} from \"./adminLoginService\";\nimport {getCurrentUser} from \"./userLoginService\";\nimport {apiUrl} from \"../config.json\";\n\nconst apiEndPoint = apiUrl + \"/images\";\n\n\nexport function uploadImageAdmin(data){\n    return httpService\n        .post(apiEndPoint, data, {\n            headers: {\n                'x-auth-token': getCurrentAdmin()\n            }\n        })\n        .then(response => {\n            console.log(response.statusText)\n        });\n}\n\n\nexport function uploadImageUser(data){\n    return httpService\n        .post(apiEndPoint,data);\n}\n\n\n\nexport function getImages(){\n    return httpService\n        .get(apiEndPoint)\n}\n","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/services/userService.js",[],"/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/components/product.jsx",["132"],"import React, {Component} from 'react';\nimport Button from \"react-bootstrap/Button\";\n\nclass Product extends Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return (\n            <div>\n                <span>{this.props.product.name}</span>\n                <Button onClick={()=>this.props.onBuy(this.props.product)} disabled={this.props.product.selected}>Buy</Button>\n            </div>\n        );\n    }\n}\n\nexport default Product;\n","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/pages/user/registerUserFormUsr.jsx",[],"/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/components/usercard.jsx",["133"],"import React from 'react';\nimport Card from \"react-bootstrap/Card\";\nimport {CardImg} from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction Usercard(props) {\n    return (\n        <React.Fragment>\n            <Card className={props.className}>\n                <Card.Header>\n                    <CardImg src={props.src} style={{width: props.imgWidth}}/>\n                </Card.Header>\n                <Card.Body>\n                    <Card.Title>{props.loggedUser.userName} {props.loggedUser.userFamily}</Card.Title>\n                    <Card.Subtitle>e-mail : {props.loggedUser.userEmail}</Card.Subtitle>\n                    <Card.Text>address : {props.loggedUser.userAddress}</Card.Text>\n                    <Card.Subtitle>telephone : {props.loggedUser.userTelephone}</Card.Subtitle>\n                </Card.Body>\n            </Card>\n        </React.Fragment>\n    );\n}\n\nexport default Usercard;\n","/home/asen/Workspace/Workspace/momoDesignSite/momo-site/src/components/userDeleteAlert.jsx",["134","135","136"],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":2,"column":16,"nodeType":"143","messageId":"144","endLine":2,"endColumn":24},{"ruleId":"141","severity":1,"message":"145","line":6,"column":8,"nodeType":"143","messageId":"144","endLine":6,"endColumn":17},{"ruleId":"146","severity":1,"message":"147","line":8,"column":5,"nodeType":"148","messageId":"149","endLine":10,"endColumn":6},{"ruleId":"141","severity":1,"message":"150","line":4,"column":8,"nodeType":"143","messageId":"144","endLine":4,"endColumn":11},{"ruleId":"141","severity":1,"message":"151","line":5,"column":8,"nodeType":"143","messageId":"144","endLine":5,"endColumn":12},{"ruleId":"141","severity":1,"message":"152","line":6,"column":8,"nodeType":"143","messageId":"144","endLine":6,"endColumn":17},{"ruleId":"141","severity":1,"message":"153","line":7,"column":8,"nodeType":"143","messageId":"144","endLine":7,"endColumn":19},{"ruleId":"141","severity":1,"message":"154","line":9,"column":8,"nodeType":"143","messageId":"144","endLine":9,"endColumn":11},{"ruleId":"141","severity":1,"message":"155","line":11,"column":8,"nodeType":"143","messageId":"144","endLine":11,"endColumn":12},{"ruleId":"141","severity":1,"message":"156","line":14,"column":9,"nodeType":"143","messageId":"144","endLine":14,"endColumn":16},{"ruleId":"141","severity":1,"message":"157","line":20,"column":9,"nodeType":"143","messageId":"144","endLine":20,"endColumn":22},{"ruleId":"141","severity":1,"message":"158","line":8,"column":9,"nodeType":"143","messageId":"144","endLine":8,"endColumn":20},{"ruleId":"141","severity":1,"message":"159","line":13,"column":8,"nodeType":"143","messageId":"144","endLine":13,"endColumn":17},{"ruleId":"141","severity":1,"message":"158","line":9,"column":36,"nodeType":"143","messageId":"144","endLine":9,"endColumn":47},{"ruleId":"160","severity":1,"message":"161","line":58,"column":9,"nodeType":"162","messageId":"163","endLine":58,"endColumn":21,"fix":"164"},{"ruleId":"141","severity":1,"message":"155","line":11,"column":8,"nodeType":"143","messageId":"144","endLine":11,"endColumn":12},{"ruleId":"165","severity":1,"message":"166","line":22,"column":1,"nodeType":"167","endLine":27,"endColumn":3},{"ruleId":"141","severity":1,"message":"168","line":2,"column":9,"nodeType":"143","messageId":"144","endLine":2,"endColumn":14},{"ruleId":"141","severity":1,"message":"169","line":3,"column":9,"nodeType":"143","messageId":"144","endLine":3,"endColumn":23},{"ruleId":"146","severity":1,"message":"147","line":5,"column":5,"nodeType":"148","messageId":"149","endLine":7,"endColumn":6},{"ruleId":"141","severity":1,"message":"170","line":4,"column":8,"nodeType":"143","messageId":"144","endLine":4,"endColumn":14},{"ruleId":"141","severity":1,"message":"171","line":1,"column":16,"nodeType":"143","messageId":"144","endLine":1,"endColumn":24},{"ruleId":"141","severity":1,"message":"172","line":4,"column":9,"nodeType":"143","messageId":"144","endLine":4,"endColumn":13},{"ruleId":"141","severity":1,"message":"173","line":5,"column":9,"nodeType":"143","messageId":"144","endLine":5,"endColumn":19},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Col' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'FormControl' is defined but never used.","'Joi' is defined but never used.","'Card' is defined but never used.","'CardImg' is defined but never used.","'CSSTransition' is defined but never used.","'loggedAdmin' is defined but never used.","'jwtDecode' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property name.","MemberExpression","unexpectedWhitespace",{"range":"176","text":"177"},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'toast' is defined but never used.","'getCurrentUser' is defined but never used.","'Button' is defined but never used.","'useState' is defined but never used.","'Fade' is defined but never used.","'Transition' is defined but never used.","no-global-assign","no-unsafe-negation",[1698,1699],""]