[{"/home/asen/Workspace/momoDesignSite/momo-site/src/index.js":"1","/home/asen/Workspace/momoDesignSite/momo-site/src/reportWebVitals.js":"2","/home/asen/Workspace/momoDesignSite/momo-site/src/App.js":"3","/home/asen/Workspace/momoDesignSite/momo-site/src/services/userLoginService.js":"4","/home/asen/Workspace/momoDesignSite/momo-site/src/services/adminLoginService.js":"5","/home/asen/Workspace/momoDesignSite/momo-site/src/components/navigation.jsx":"6","/home/asen/Workspace/momoDesignSite/momo-site/src/pages/products.jsx":"7","/home/asen/Workspace/momoDesignSite/momo-site/src/pages/basket.jsx":"8","/home/asen/Workspace/momoDesignSite/momo-site/src/pages/user/registerUserFormUsr.jsx":"9","/home/asen/Workspace/momoDesignSite/momo-site/src/pages/user/userLoginForm.jsx":"10","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/admin/registerAdminForm.jsx":"11","/home/asen/Workspace/momoDesignSite/momo-site/src/pages/user/userProfile.jsx":"12","/home/asen/Workspace/momoDesignSite/momo-site/src/pages/contacts/contacts.jsx":"13","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/admin/adminLoginForm.jsx":"14","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/admin/adminPanel.jsx":"15","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/admin/updateAdminForm.jsx":"16","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/admin/allAdminsList.jsx":"17","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/user/allUsersList.jsx":"18","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/user/updateUserForm.jsx":"19","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/user/registerUserForm.jsx":"20","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/images/imagesUpload.jsx":"21","/home/asen/Workspace/momoDesignSite/momo-site/src/services/httpService.js":"22","/home/asen/Workspace/momoDesignSite/momo-site/src/services/adminService.js":"23","/home/asen/Workspace/momoDesignSite/momo-site/src/services/imgService.js":"24","/home/asen/Workspace/momoDesignSite/momo-site/src/services/userService.js":"25","/home/asen/Workspace/momoDesignSite/momo-site/src/services/emailService.js":"26","/home/asen/Workspace/momoDesignSite/momo-site/src/components/product.jsx":"27","/home/asen/Workspace/momoDesignSite/momo-site/src/components/contactsMailForm.jsx":"28","/home/asen/Workspace/momoDesignSite/momo-site/src/components/userDeleteAlert.jsx":"29","/home/asen/Workspace/momoDesignSite/momo-site/src/components/usercard.jsx":"30","/home/asen/Workspace/momoDesignSite/momo-site/src/components/imagesUploadForm.jsx":"31","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/emails/allEmailsList.jsx":"32","/home/asen/Workspace/momoDesignSite/momo-site/src/components/trTdTable.jsx":"33","/home/asen/Workspace/momoDesignSite/momo-site/src/components/navLinkComp.jsx":"34","/home/asen/Workspace/momoDesignSite/momo-site/src/pages/user/updateUserFormUsr.jsx":"35","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/bios/registerBioForm.jsx":"36","/home/asen/Workspace/momoDesignSite/momo-site/src/services/bioService.js":"37","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/bios/allBiosList.jsx":"38","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/bios/updateBioForm.jsx":"39","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/blogs/registerBlogForm.jsx":"40","/home/asen/Workspace/momoDesignSite/momo-site/src/services/blogService.js":"41","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/blogs/allBlogsList.jsx":"42","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/blogs/updateBlogForm.jsx":"43","/home/asen/Workspace/momoDesignSite/momo-site/src/pages/blog/blog.jsx":"44","/home/asen/Workspace/momoDesignSite/momo-site/src/pages/blog/blogDetails.jsx":"45","/home/asen/Workspace/momoDesignSite/momo-site/src/services/commentService.js":"46","/home/asen/Workspace/momoDesignSite/momo-site/src/components/blogCard.jsx":"47","/home/asen/Workspace/momoDesignSite/momo-site/src/components/blogComments.jsx":"48","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/comments/AllCommentsList.jsx":"49","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/designs/registerDesignForm.jsx":"50","/home/asen/Workspace/momoDesignSite/momo-site/src/services/designService.js":"51","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/designs/allDesignsList.jsx":"52","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/designs/updateDesignForm.jsx":"53","/home/asen/Workspace/momoDesignSite/momo-site/src/services/paginateFunction.js":"54","/home/asen/Workspace/momoDesignSite/momo-site/src/components/paginate.jsx":"55","/home/asen/Workspace/momoDesignSite/momo-site/src/components/footer.jsx":"56","/home/asen/Workspace/momoDesignSite/momo-site/src/components/DropDownComments.jsx":"57","/home/asen/Workspace/momoDesignSite/momo-site/src/components/DropDownDesigns.jsx":"58","/home/asen/Workspace/momoDesignSite/momo-site/src/pages/biography/biography.jsx":"59","/home/asen/Workspace/momoDesignSite/momo-site/src/pages/designs/designs.jsx":"60","/home/asen/Workspace/momoDesignSite/momo-site/src/pages/designs/designsDetails.jsx":"61","/home/asen/Workspace/momoDesignSite/momo-site/src/components/listGroupDesigns.jsx":"62","/home/asen/Workspace/momoDesignSite/momo-site/src/pages/homepage/homepage.jsx":"63","/home/asen/Workspace/momoDesignSite/momo-site/src/components/homepageCards.jsx":"64","/home/asen/Workspace/momoDesignSite/momo-site/src/components/scrollToTop.jsx":"65"},{"size":851,"mtime":1617521877263,"results":"66","hashOfConfig":"67"},{"size":362,"mtime":1607679022000,"results":"68","hashOfConfig":"67"},{"size":6102,"mtime":1617689553275,"results":"69","hashOfConfig":"67"},{"size":929,"mtime":1617689553311,"results":"70","hashOfConfig":"67"},{"size":995,"mtime":1617689553307,"results":"71","hashOfConfig":"67"},{"size":9014,"mtime":1617691362541,"results":"72","hashOfConfig":"67"},{"size":1425,"mtime":1610572344000,"results":"73","hashOfConfig":"67"},{"size":1545,"mtime":1610572344000,"results":"74","hashOfConfig":"67"},{"size":15866,"mtime":1617433452353,"results":"75","hashOfConfig":"67"},{"size":10460,"mtime":1617601868413,"results":"76","hashOfConfig":"67"},{"size":8825,"mtime":1615115056000,"results":"77","hashOfConfig":"67"},{"size":4701,"mtime":1617691362597,"results":"78","hashOfConfig":"67"},{"size":5369,"mtime":1617026243267,"results":"79","hashOfConfig":"67"},{"size":7692,"mtime":1617689553263,"results":"80","hashOfConfig":"67"},{"size":4101,"mtime":1615539243000,"results":"81","hashOfConfig":"67"},{"size":9843,"mtime":1615115158000,"results":"82","hashOfConfig":"67"},{"size":4264,"mtime":1617689553283,"results":"83","hashOfConfig":"67"},{"size":5442,"mtime":1617691362557,"results":"84","hashOfConfig":"67"},{"size":16609,"mtime":1617691362517,"results":"85","hashOfConfig":"67"},{"size":15309,"mtime":1617691362597,"results":"86","hashOfConfig":"67"},{"size":3897,"mtime":1617691362565,"results":"87","hashOfConfig":"67"},{"size":812,"mtime":1617688563923,"results":"88","hashOfConfig":"67"},{"size":1493,"mtime":1617689553315,"results":"89","hashOfConfig":"67"},{"size":675,"mtime":1617689553327,"results":"90","hashOfConfig":"67"},{"size":2604,"mtime":1617689553323,"results":"91","hashOfConfig":"67"},{"size":836,"mtime":1617689553319,"results":"92","hashOfConfig":"67"},{"size":468,"mtime":1608631258000,"results":"93","hashOfConfig":"67"},{"size":3378,"mtime":1617691362609,"results":"94","hashOfConfig":"67"},{"size":1339,"mtime":1617368382093,"results":"95","hashOfConfig":"67"},{"size":1928,"mtime":1617521575314,"results":"96","hashOfConfig":"67"},{"size":620,"mtime":1617691362577,"results":"97","hashOfConfig":"67"},{"size":4872,"mtime":1615285448000,"results":"98","hashOfConfig":"67"},{"size":965,"mtime":1614755166000,"results":"99","hashOfConfig":"67"},{"size":769,"mtime":1614690466000,"results":"100","hashOfConfig":"67"},{"size":18928,"mtime":1617691362537,"results":"101","hashOfConfig":"67"},{"size":10429,"mtime":1617689553295,"results":"102","hashOfConfig":"67"},{"size":1189,"mtime":1617689553303,"results":"103","hashOfConfig":"67"},{"size":6353,"mtime":1617689553331,"results":"104","hashOfConfig":"67"},{"size":12591,"mtime":1617689720850,"results":"105","hashOfConfig":"67"},{"size":12845,"mtime":1617691362601,"results":"106","hashOfConfig":"67"},{"size":1232,"mtime":1617689553335,"results":"107","hashOfConfig":"67"},{"size":7007,"mtime":1617691362553,"results":"108","hashOfConfig":"67"},{"size":15435,"mtime":1617691362593,"results":"109","hashOfConfig":"67"},{"size":10144,"mtime":1616154068000,"results":"110","hashOfConfig":"67"},{"size":8006,"mtime":1617691362581,"results":"111","hashOfConfig":"67"},{"size":1870,"mtime":1617689553287,"results":"112","hashOfConfig":"67"},{"size":1875,"mtime":1617691362565,"results":"113","hashOfConfig":"67"},{"size":1498,"mtime":1617691362609,"results":"114","hashOfConfig":"67"},{"size":7166,"mtime":1617691362549,"results":"115","hashOfConfig":"67"},{"size":12722,"mtime":1617100159947,"results":"116","hashOfConfig":"67"},{"size":1245,"mtime":1617689553251,"results":"117","hashOfConfig":"67"},{"size":7941,"mtime":1617691362577,"results":"118","hashOfConfig":"67"},{"size":14914,"mtime":1617691362585,"results":"119","hashOfConfig":"67"},{"size":499,"mtime":1615278045000,"results":"120","hashOfConfig":"67"},{"size":2024,"mtime":1615280183000,"results":"121","hashOfConfig":"67"},{"size":4167,"mtime":1617691362569,"results":"122","hashOfConfig":"67"},{"size":1425,"mtime":1615797440000,"results":"123","hashOfConfig":"67"},{"size":1387,"mtime":1615797440000,"results":"124","hashOfConfig":"67"},{"size":3811,"mtime":1617691362561,"results":"125","hashOfConfig":"67"},{"size":5245,"mtime":1617691362573,"results":"126","hashOfConfig":"67"},{"size":5176,"mtime":1617691362589,"results":"127","hashOfConfig":"67"},{"size":1390,"mtime":1617026243267,"results":"128","hashOfConfig":"67"},{"size":4579,"mtime":1617441551349,"results":"129","hashOfConfig":"67"},{"size":4078,"mtime":1617026243267,"results":"130","hashOfConfig":"67"},{"size":249,"mtime":1617521877283,"results":"131","hashOfConfig":"67"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},"1ll33bn",{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"134"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"134"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"134"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"168","usedDeprecatedRules":"134"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"134"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"134"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"134"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"134"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"134"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"134"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"134"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"134"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"134"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"134"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"134"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"134"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"134"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"134"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"134"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},"/home/asen/Workspace/momoDesignSite/momo-site/src/index.js",[],["283","284"],"/home/asen/Workspace/momoDesignSite/momo-site/src/reportWebVitals.js",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/App.js",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/services/userLoginService.js",["285"],"import httpService from \"./httpService\";\nimport {apiUrl} from \"../config.json\";\n\n// const apiEndPoint = apiUrl + \"/userauthent\";\nconst apiEndPoint = \"/userauthent\";\n\n//Fetching User frontend data to the sever\n//Taking the response token and storing it in localStorage so the user stayed always logget till logout\nexport function userLogin(data) {\n    return httpService\n        .post(apiEndPoint, data)\n        .then(response => {\n        if (response.data) {\n            localStorage.setItem(\"user\", response.data)\n        }\n        return response.data;\n    })\n        .catch(err => {\n            // toast.error(err.response.data);\n            return Promise.reject(err);\n        });\n}\n\n//Function for logging out the User\nexport function userLogout() {\n    localStorage.removeItem(\"user\");\n}\n\n//Function returning the currently logged User (token)\nexport function getCurrentUser() {\n    return localStorage.getItem(\"user\");\n}\n","/home/asen/Workspace/momoDesignSite/momo-site/src/services/adminLoginService.js",["286"],"import httpService from \"./httpService\";\nimport {apiUrl} from \"../config.json\";\n\n// const apiEndPoint = apiUrl + \"/adminauthent\";\nconst apiEndPoint = \"/adminauthent\";\n\n//Fetching frontend admin data (email and password) to the server\n//Taking the response token and saving it in the session storage(Login after every browser closing required);\nexport function adminLogin(data) {\n    return httpService\n        .post(apiEndPoint, data)\n        .then(response => {\n            if (response.data) {\n                sessionStorage.setItem(\"admin\", response.data);\n            }\n            return response.data;\n        })\n        .catch(err => {\n            // toast.error(err.response.data);\n            return Promise.reject(err);\n        });\n}\n\n//Function for logging out the Admin\nexport function adminLogout() {\n    sessionStorage.removeItem(\"admin\");\n}\n\n//Function returning the currently logged Admin (token)\nexport function getCurrentAdmin() {\n    return sessionStorage.getItem(\"admin\");\n}\n","/home/asen/Workspace/momoDesignSite/momo-site/src/components/navigation.jsx",["287"],"/home/asen/Workspace/momoDesignSite/momo-site/src/pages/products.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/pages/basket.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/pages/user/registerUserFormUsr.jsx",["288","289"],"import React, {Component} from 'react';\nimport '../../css/user/userRegister.css';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport Joi from \"joi\";\nimport {toast, Zoom} from \"react-toastify\";\nimport Card from \"react-bootstrap/Card\";\nimport {CardImg, FormLabel} from \"react-bootstrap\";\nimport {uploadImageUser} from \"../../services/imgService\";\nimport {registerUser} from \"../../services/userService\";\nimport profile from '../../assets/profile-default.png'\n\nclass RegisterUserFormUsr extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userName: '',\n            userFamily: '',\n            userPassword: '',\n            userPicture: '',\n            userEmail: '',\n            userAddress: '',\n            userTelephone: '',\n            errors: {},\n            isDisabled: true,\n            showPicture: '',\n            uploadPicture: '',\n            isRegistered: false\n        }\n    }\n\n    schema = Joi.object({\n        userName: Joi.string()\n            .required()\n            .min(3)\n            .max(30)\n            .trim(true)\n            .label(\"First name\"),\n        userFamily: Joi.string()\n            .required()\n            .min(3)\n            .max(30)\n            .trim(true)\n            .label(\"Second name\"),\n        userPassword: Joi.string()\n            .required()\n            .min(8)\n            .max(255)\n            .trim(true)\n            .label(\"Password\"),\n        userEmail: Joi.string()\n            .required()\n            .min(5)\n            .max(50)\n            .trim(true)\n            .label(\"Email\"),\n        userPicture: Joi.string()\n            .required()\n            .min(5)\n            .max(100)\n            .label(\"Profile picture\"),\n        userAddress: Joi.string()\n            .required()\n            .min(5)\n            .max(100)\n            .trim(true)\n            .label(\"Address\"),\n        userTelephone: Joi.string()\n            .required()\n            .min(5)\n            .max(50)\n            .trim(true)\n            .label(\"Personal telephone\")\n    })\n\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n        const errors = this.validateUserRegister();\n        this.setState({errors: errors || {}});\n        console.log(errors);\n        if (errors) return;\n\n        if (this.state.uploadPicture === '') {\n            toast.error('You must select profile picture to upload!');\n            return;\n        }\n\n        const user = {\n            userName: this.state.userName,\n            userFamily: this.state.userFamily,\n            userPassword: this.state.userPassword,\n            userEmail: this.state.userEmail,\n            userPicture: this.state.userPicture,\n            userAddress: this.state.userAddress,\n            userTelephone: this.state.userTelephone\n        };\n\n        await registerUser(user);\n        toast('Successful registration!', {\n            position: \"top-center\",\n            transition: Zoom,\n            className: 'user-register-toaster'\n        });\n\n        const data = new FormData();\n        data.append('file', this.state.uploadPicture);\n        await uploadImageUser(data);\n        toast('Image was successfully uploaded!', {\n            position: \"top-center\",\n            transition: Zoom,\n            className: 'user-register-toaster'\n        });\n        console.log('User profile image was uploaded to gallery');\n\n        this.setState({isDisabled: true, isRegistered: true});\n\n    }\n\n    handleChange = (event) => {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value,\n            isDisabled: false\n        })\n    }\n\n    onImageHandler = (event) => {\n        this.setState({\n            showPicture: URL.createObjectURL(event.target.files[0]),\n            uploadPicture: event.target.files[0],\n            userPicture: event.target.files[0].name,\n            isDisabled: false\n        });\n    }\n\n    validateUserRegister = () => {\n        const user = {\n            userName: this.state.userName,\n            userFamily: this.state.userFamily,\n            userPassword: this.state.userPassword,\n            userEmail: this.state.userEmail,\n            userPicture: this.state.userPicture,\n            userAddress: this.state.userAddress,\n            userTelephone: this.state.userTelephone\n        };\n        const options = {abortEarly: false};\n        const result = this.schema.validate(user, options);\n\n        if (!result.error) return null;\n\n        const errors = {};\n        for (let item of result.error.details)\n            errors[item.path[0]] = item.message;\n        return errors;\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Container className=\"user-register-main\" fluid={true}>\n                    <Row className=\"user-register-row-main d-flex justify-content-center\">\n                        {this.state.isRegistered === false &&\n                        <Col>\n                            <Card className=\"user-register-card\">\n                                <Form onSubmit={this.handleSubmit}>\n                                    <Row>\n                                        <Col md=\"auto\" className=\"pr-0\">\n                                            {this.state.showPicture &&\n                                            <CardImg\n                                                className=\"ml-5 mt-5\"\n                                                src={this.state.showPicture}\n                                                style={{width: 330, height: 'auto'}}/>\n                                            }\n                                            {!this.state.showPicture &&\n                                            <CardImg\n                                                className=\"ml-5 mt-5\"\n                                                src={profile}\n                                                style={{width: 330, height: 'auto'}}/>\n                                            }\n                                            <FormGroup className=\"pl-5 pt-4\">\n                                                <Form.File\n                                                    className=\"user-register-form\"\n                                                    id=\"image\"\n                                                    name=\"image\"\n                                                    label={this.state.errors.userPicture && \"You must select image for profile picture\"\n                                                    || \"Select image for profile picture\"}\n                                                    onChange={this.onImageHandler}/>\n                                            </FormGroup>\n                                        </Col>\n\n                                        <Col className=\"pl-0\">\n                                            <FormGroup className=\"px-5 pt-5\">\n                                                {this.state.errors.userName &&\n                                                <FormLabel className=\"text-danger\">\n                                                    {this.state.errors.userName}\n                                                </FormLabel>}\n                                                <FormControl\n                                                    className=\"user-register-form-control\"\n                                                    autoFocus={true}\n                                                    name=\"userName\"\n                                                    type=\"text\"\n                                                    value={this.state.userName}\n                                                    placeholder=\"Please enter your first name\"\n                                                    onChange={this.handleChange}/>\n                                            </FormGroup>\n\n                                            <FormGroup className=\"px-5 pt-2\">\n                                                {this.state.errors.userFamily &&\n                                                <FormLabel className=\"text-danger\">\n                                                    {this.state.errors.userFamily}\n                                                </FormLabel>}\n                                                <FormControl\n                                                    className=\"user-register-form-control\"\n                                                    name=\"userFamily\"\n                                                    type=\"text\"\n                                                    value={this.state.userFamily}\n                                                    placeholder=\"Please enter your second name\"\n                                                    onChange={this.handleChange}/>\n                                            </FormGroup>\n\n                                            <FormGroup className=\"px-5 pt-2\">\n                                                {this.state.errors.userAddress &&\n                                                <FormLabel className=\"text-danger\">\n                                                    {this.state.errors.userAddress}\n                                                </FormLabel>}\n                                                <FormControl\n                                                    className=\"user-register-form-control\"\n                                                    name=\"userAddress\"\n                                                    type=\"text\"\n                                                    value={this.state.userAddress}\n                                                    placeholder=\"Please enter your address : country / city / street / postal code\"\n                                                    onChange={this.handleChange}/>\n                                            </FormGroup>\n\n                                            <FormGroup className=\"px-5 pt-2\">\n                                                {this.state.errors.userEmail &&\n                                                <FormLabel className=\"text-danger\">\n                                                    {this.state.errors.userEmail}\n                                                </FormLabel>}\n                                                <FormControl\n                                                    className=\"user-register-form-control\"\n                                                    name=\"userEmail\"\n                                                    type=\"email\"\n                                                    value={this.state.userEmail}\n                                                    placeholder=\"Please enter your e-mail\"\n                                                    onChange={this.handleChange}/>\n                                            </FormGroup>\n\n                                            <FormGroup className=\"px-5 pt-2\">\n                                                {this.state.errors.userTelephone &&\n                                                <FormLabel className=\"text-danger\">\n                                                    {this.state.errors.userTelephone}\n                                                </FormLabel>}\n                                                <FormControl\n                                                    className=\"user-register-form-control\"\n                                                    name=\"userTelephone\"\n                                                    type=\"text\"\n                                                    value={this.state.userTelephone}\n                                                    placeholder=\"Please enter your personal telephone\"\n                                                    onChange={this.handleChange}/>\n                                            </FormGroup>\n\n                                            <FormGroup className=\"px-5 pt-2\">\n                                                {this.state.errors.userPassword &&\n                                                <FormLabel className=\"text-danger\">\n                                                    {this.state.errors.userPassword}\n                                                </FormLabel>}\n                                                <FormControl\n                                                    className=\"user-register-form-control\"\n                                                    name=\"userPassword\"\n                                                    type=\"password\"\n                                                    value={this.state.userPassword}\n                                                    placeholder=\"Please enter your password : min. 8 symbols\"\n                                                    onChange={this.handleChange}/>\n                                            </FormGroup>\n                                        </Col>\n                                    </Row>\n                                    <Row className=\"px-5 pb-4 py-3 d-flex justify-content-between\">\n                                        <Col md={4}>\n                                            <Button\n                                                className=\"user-register-register-button\"\n                                                type=\"submit\"\n                                                disabled={this.state.isDisabled}>\n                                                REGISTER\n                                            </Button>\n                                        </Col>\n                                        <Col className=\"d-flex justify-content-end\">\n                                            <Button\n                                                className=\"user-register-redirect-button\"\n                                                href=\"/userlogin\">\n                                                BACK TO LOGIN PAGE\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </Form>\n                            </Card>\n                        </Col>\n                        }\n\n                        {this.state.isRegistered &&\n                        <Card className=\"user-register-card2\">\n                            <Card.Title\n                                className=\"user-register-welcome text-center\">\n                                WELCOME!\n                            </Card.Title>\n                            <Card.Subtitle\n                                className=\"user-register-names text-center\">\n                                ASEN GEORGIEV\n                            </Card.Subtitle>\n                            <CardImg\n                                src={this.state.showPicture}\n                                style={{width: 330, height: 365}}/>\n                            <Card.Body className=\"d-flex justify-content-center\">\n                                <Button\n                                    className=\"user-register-profile-button\"\n                                    href=\"/userprofile\">\n                                    GO TO YOUR PROFILE\n                                </Button>\n                            </Card.Body>\n                        </Card>\n                        }\n\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default RegisterUserFormUsr;\n","/home/asen/Workspace/momoDesignSite/momo-site/src/pages/user/userLoginForm.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/admin/admin/registerAdminForm.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/pages/user/userProfile.jsx",["290"],"/home/asen/Workspace/momoDesignSite/momo-site/src/pages/contacts/contacts.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/admin/admin/adminLoginForm.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/admin/admin/adminPanel.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/admin/admin/updateAdminForm.jsx",["291"],"import React, {Component} from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Joi from \"joi\";\nimport Form from \"react-bootstrap/Form\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport {toast, Zoom} from \"react-toastify\";\nimport {FormLabel} from \"react-bootstrap\";\nimport FormCheck from \"react-bootstrap/FormCheck\";\nimport \"../../css/admin/adminUpdate.css\";\nimport {getAdmin, updateAdmin} from \"../../services/adminService\";\n\nclass UpdateAdminForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            admin: {\n                adminName: \"\",\n                adminEmail: \"\",\n                adminPassword: \"\",\n                isAdmin: false\n            },\n            errors: {},\n            isDisabled: true\n        }\n\n    }\n\n    schema = Joi.object({\n        _id: Joi.string(),\n        adminName: Joi.string()\n            .required()\n            .min(5)\n            .max(50)\n            .label(\"Admin Name\"),\n        adminEmail: Joi.string()\n            .required()\n            .min(5)\n            .max(50)\n            .label(\"Admin Email\"),\n        adminPassword: Joi.string()\n            .required()\n            .min(8)\n            .max(255)\n            .label(\"Admin Password\"),\n        isAdmin: Joi.boolean()\n            .label(\"Is Admin\")\n    });\n\n\n    handleChange = (event) => {\n        const admin = {...this.state.admin};\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        admin [name] = value;\n        this.setState({\n            admin,\n            isDisabled: false\n        })\n    }\n\n\n    async populateAdmin() {\n        try {\n            const adminId = this.props.match.params.id;\n            const {data: admin} = await getAdmin(adminId);\n            this.setState({admin: this.mapToViewModel(admin)});\n        } catch (e) {\n            if (e.response && e.response.status === 404)\n                console.log('There is no Admin with the given ID!');\n        }\n    }\n\n    async componentDidMount() {\n        await this.populateAdmin();\n    }\n\n    mapToViewModel(admin) {\n        return {\n            _id: admin._id,\n            adminName: admin.adminName,\n            adminEmail: admin.adminEmail,\n            // adminPassword: admin.adminPassword,\n            isAdmin: admin.isAdmin\n        };\n    }\n\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n        const errors = this.validateAdminInput();\n        this.setState({errors: errors || {}});\n        if (errors) return;\n\n        const admin = {\n            adminName: this.state.admin.adminName,\n            adminEmail: this.state.admin.adminEmail,\n            adminPassword: this.state.admin.adminPassword,\n            isAdmin: this.state.admin.isAdmin\n        };\n\n        await updateAdmin(admin, this.state.admin._id);\n        this.setState({isDisabled: true});\n        toast('Admin update was successful!', {\n            position: \"top-center\",\n            transition: Zoom,\n            className: 'update-toaster'\n        });\n    }\n\n\n    validateAdminInput = () => {\n        const admin = {\n            adminName: this.state.admin.adminName,\n            adminEmail: this.state.admin.adminEmail,\n            adminPassword: this.state.admin.adminPassword,\n            isAdmin: this.state.admin.isAdmin\n        };\n        const options = {abortEarly: false};\n        const result = this.schema.validate(admin, options);\n        console.log(result);\n\n        if (!result.error) return null;\n        const errors = {};\n        for (let item of result.error.details)\n            errors[item.path[0]] = item.message;\n        return errors;\n    }\n\n\n    adminRedirect = () => {\n        this.props.history.push(\"/admin/adminslist\")\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Container className=\"update-main-container\" fluid={true}>\n                    <Container className=\"update-sub-container container\" fluid={true}>\n                        <Row className=\"m-0\">\n                            <span className=\"update-span\">Update admin :</span>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <div className=\"update-div-form\">\n                                    <Form onSubmit={this.handleSubmit}>\n                                        <FormGroup className=\"px-5 pt-4\">\n                                            {this.state.errors.adminName &&\n                                            <FormLabel className=\"text-danger\">\n                                                {this.state.errors.adminName}\n                                            </FormLabel>}\n                                            <FormControl\n                                                className=\"update-form-control\"\n                                                autoFocus={true}\n                                                id=\"adminName\"\n                                                name=\"adminName\"\n                                                type=\"text\"\n                                                value={this.state.admin.adminName}\n                                                placeholder=\"Enter Admin's name\"\n                                                onChange={this.handleChange}/>\n                                        </FormGroup>\n                                        <FormGroup className=\"px-5 pt-2\">\n                                            {this.state.errors.adminEmail &&\n                                            <FormLabel className=\"text-danger\">\n                                                {this.state.errors.adminEmail}\n                                            </FormLabel>}\n                                            <FormControl\n                                                className=\"update-form-control\"\n                                                id=\"adminEmail\"\n                                                name=\"adminEmail\"\n                                                type=\"email\"\n                                                value={this.state.admin.adminEmail}\n                                                placeholder=\"Enter Admin's email\"\n                                                onChange={this.handleChange}/>\n                                        </FormGroup>\n                                        <FormGroup className=\"px-5 pt-2\">\n                                            {this.state.errors.adminPassword &&\n                                            <FormLabel className=\"text-danger\">\n                                                {this.state.errors.adminPassword}\n                                            </FormLabel>}\n                                            <FormControl\n                                                className=\"update-form-control\"\n                                                id=\"adminPassword\"\n                                                name=\"adminPassword\"\n                                                type=\"password\"\n                                                value={this.state.admin.adminPassword}\n                                                placeholder=\"Enter Admin's password\"\n                                                onChange={this.handleChange}/>\n                                        </FormGroup>\n                                        <FormGroup className=\"px-5 pt-2\">\n                                            <FormCheck\n                                                className=\"update-checkbox\"\n                                                id=\"isAdmin\"\n                                                name=\"isAdmin\"\n                                                type=\"checkbox\"\n                                                checked={this.state.admin.isAdmin}\n                                                value={this.state.admin.isAdmin}\n                                                label=\"User will have Admin rights\"\n                                                onChange={this.handleChange}/>\n                                        </FormGroup>\n                                        <Row className=\"px-5 pb-5 py-2 d-flex justify-content-between\">\n                                            <Col>\n                                                <Button\n                                                    className=\"update-update-button\"\n                                                    type=\"submit\"\n                                                    disabled={this.state.isDisabled}>\n                                                    UPDATE ADMIN\n                                                </Button>\n                                            </Col>\n                                            <Col className=\"d-flex justify-content-end\">\n                                                <Button\n                                                    className=\"update-redirect-button\"\n                                                    onClick={this.adminRedirect}>\n                                                    BACK TO ADMINS LIST\n                                                </Button>\n                                            </Col>\n                                        </Row>\n                                    </Form>\n                                </div>\n                            </Col>\n                        </Row>\n                    </Container>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default UpdateAdminForm;\n","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/admin/allAdminsList.jsx",["292"],"import React, {Component} from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Table from \"react-bootstrap/Table\";\nimport {Link} from \"react-router-dom\";\nimport {toast, Zoom} from \"react-toastify\";\nimport \"../../css/admin/adminAllList.css\";\nimport {deleteAdmin, getAllAdmins, loggedAdmin} from \"../../services/adminService\";\n\nclass AllAdminsList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            admins: [],\n        }\n    }\n\n\n    async componentDidMount() {\n        const {data: admins} = await getAllAdmins();\n        this.setState({admins});\n    }\n\n\n    handleDelete = async (admin) => {\n        const allAdmins = this.state.admins;\n        const admins = allAdmins.filter(a => a._id !== admin._id);\n        this.setState({admins});\n\n        try {\n            await deleteAdmin(admin._id);\n            toast(`Admin : ${admin.adminName} was successfully deleted!`, {\n                position: \"top-center\",\n                transition: Zoom,\n                className: 'adminlist-toaster'\n            });\n        } catch (e) {\n            if (e.response && e.response.status === 404) console.log(\"Admin with the given ID was not found!\");\n            toast.error(\"This Admin has already been deleted.\");\n            this.setState({admins: allAdmins});\n        }\n    }\n\n\n    adminRedirect = () => {\n        this.props.history.push(\"/admin\");\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Container className=\"adminlist-main-container\" fluid={true}>\n                    <Container className=\"adminlist-sub-container container\" fluid={true}>\n                        <Row className=\"m-0\">\n                            <span className=\"adminlist-span\">All registered Admins :</span>\n                        </Row>\n                        <Table responsive hover className=\"adminlist-table\">\n                            <thead className=\"adminlist-thead\">\n                            <tr>\n                                <th>Full name</th>\n                                <th>Email</th>\n                                <th>Admin rights</th>\n                                <th>Update</th>\n                                <th>Delete</th>\n                            </tr>\n                            </thead>\n                            <tbody className=\"adminlist-tbody\">\n                            {this.state.admins.map(adm => {\n                                return (\n                                    <tr key={adm._id}>\n                                        <td>{adm.adminName}</td>\n                                        <td>{adm.adminEmail}</td>\n                                        {adm.isAdmin && <td>admin</td>}\n                                        {!adm.isAdmin && <td>suspended</td>}\n                                        <td>\n                                            <Link\n                                                className=\"adminlist-link\"\n                                                to={`/admin/adminslist/${adm._id}`}>\n                                                Update\n                                            </Link>\n                                        </td>\n                                        <td>\n                                            <Button\n                                                className=\"adminlist-delete-button\"\n                                                onClick={() => this.handleDelete(adm)}>\n                                                Delete\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                )\n                            })}\n                            </tbody>\n                        </Table>\n                        <Button\n                            className=\"adminlist-redirect-button\"\n                            onClick={this.adminRedirect}>\n                            BACK TO ADMIN PANEL\n                        </Button>\n                    </Container>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default AllAdminsList;\n","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/user/allUsersList.jsx",["293"],"/home/asen/Workspace/momoDesignSite/momo-site/src/admin/user/updateUserForm.jsx",["294","295"],"/home/asen/Workspace/momoDesignSite/momo-site/src/admin/user/registerUserForm.jsx",["296","297"],"/home/asen/Workspace/momoDesignSite/momo-site/src/admin/images/imagesUpload.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/services/httpService.js",["298"],"import axios from \"axios\";\nimport {toast} from \"react-toastify\";\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.response.use(success => {\n    console.log(success);\n    return (success);\n}, error => {\n    const expectedError = error.response &&\n        error.response.status >= 400 &&\n        error.response.status < 500;\n    if (expectedError) {\n        console.log(error.response.data);\n        toast.error(error.response.data, {\n            position: \"top-center\",\n            className: 'http-toaster'\n        });\n    }\n    if (!expectedError) {\n        console.log(error);\n        toast.error('An Unexpected error occured!');\n    }\n    return Promise.reject(error);\n});\n\nexport default {\n    get: axios.get,\n    post: axios.post,\n    put: axios.put,\n    delete: axios.delete\n};\n","/home/asen/Workspace/momoDesignSite/momo-site/src/services/adminService.js",["299"],"import httpService from \"./httpService\";\nimport {getCurrentAdmin} from \"./adminLoginService\";\nimport {apiUrl} from \"../config.json\";\n\n// const apiEndPoint = apiUrl + \"/admins\";\nconst apiEndPoint = \"/admins\";\n\nfunction adminUrl(adminId) {\n    return `${apiEndPoint}/${adminId}`;\n}\n\n\nexport function getAdmin(adminId) {\n    return httpService\n        .get(adminUrl(adminId), {\n            headers: {\n                'x-auth-token': getCurrentAdmin()\n            }\n        })\n}\n\n\nexport function getAllAdmins() {\n    return httpService\n        .get(apiEndPoint, {\n            headers: {\n                'x-auth-token': getCurrentAdmin()\n            }\n        });\n}\n\n\nexport function registerAdmin(admin) {\n    return httpService\n        .post(apiEndPoint, admin,{\n            headers: {\n                'x-auth-token': getCurrentAdmin()\n            }\n        });\n}\n\n\nexport function updateAdmin(admin, adminId) {\n    const body = {...admin};\n    return httpService\n        .put(adminUrl(adminId), body, {\n            headers: {\n                'x-auth-token': getCurrentAdmin()\n            }\n        });\n}\n\n\nexport function deleteAdmin(adminId) {\n    return httpService\n        .delete(adminUrl(adminId), {\n            headers: {\n                'x-auth-token': getCurrentAdmin()\n            }\n        })\n}\n\n\nexport function loggedAdmin(){\n    return httpService\n        .get(apiEndPoint+\"/adm\",{\n            headers:{\n                'x-auth-token': getCurrentAdmin()\n            }\n        })\n}\n","/home/asen/Workspace/momoDesignSite/momo-site/src/services/imgService.js",["300"],"import httpService from \"./httpService\";\nimport {getCurrentAdmin} from \"./adminLoginService\";\nimport {apiUrl} from \"../config.json\";\n\n// const apiEndPoint = apiUrl + \"/images\";\nconst apiEndPoint = \"/images\";\n\n\nexport function uploadImageAdmin(data){\n    return httpService\n        .post(apiEndPoint, data, {\n            headers: {\n                'x-auth-token': getCurrentAdmin()\n            }\n        })\n        .then(response => {\n            console.log(response.statusText)\n        });\n}\n\n\nexport function uploadImageUser(data){\n    return httpService\n        .post(apiEndPoint,data);\n}\n\n\n\nexport function getImages(){\n    return httpService\n        .get(apiEndPoint)\n}\n","/home/asen/Workspace/momoDesignSite/momo-site/src/services/userService.js",["301"],"import httpService from \"./httpService\";\nimport {toast} from \"react-toastify\";\nimport {getCurrentAdmin} from \"./adminLoginService\";\nimport {apiUrl} from \"../config.json\";\nimport {getCurrentUser} from \"./userLoginService\";\n\n//While in working process:\n// const apiEndPoint = apiUrl + \"/users\";\n\n//Before deploying finished app:\nconst apiEndPoint = \"/users\";\n\nfunction userUrl(userId){\n    return `${apiEndPoint}/${userId}`;\n}\n\n\nexport function registerUser(user){\n    return httpService\n        .post(apiEndPoint,user)\n        .then(response => {\n            if (response.data) {\n                localStorage.setItem(\"user\", response.data)\n            }\n            return response.data;\n        })\n        .catch(err => {\n            toast.error(err.response.data);\n            return Promise.reject(err);\n        });\n}\n\n\nexport function registerUserAdmin(user){\n    return httpService\n        .post(apiEndPoint,user,{\n            headers:{\n                'x-auth-token': getCurrentAdmin()\n            }\n        });\n}\n\n\nexport function getUserAdmin(userId){\n    return httpService\n        .get(userUrl(userId),{\n            headers:{\n                'x-auth-token': getCurrentAdmin()\n            }\n        });\n}\n\n\nexport function getUserUser(userId){\n    return httpService\n        .get(userUrl(userId),{\n            headers:{\n                'x-auth-token': getCurrentUser()\n            }\n        });\n}\n\nexport function getAllUsers(){\n    return httpService\n        .get(apiEndPoint,{\n            headers:{\n                'x-auth-token': getCurrentAdmin()\n            }\n        });\n}\n\n\nexport function updateUser(user, userId){\n    const body = {...user};\n    return httpService\n        .put(userUrl(userId), body,{\n            headers:{\n                'x-auth-token': getCurrentUser()\n            }\n        });\n}\n\n\nexport function updateUserPassword(userEmail){\n    const body = {...userEmail}\n    return httpService\n        .put(apiEndPoint+\"/pass/update\",body);\n}\n\n\n\n\nexport function updateUserAdmin(user, userId){\n    const body = {...user};\n    return httpService\n        .put(userUrl(userId), body,{\n            headers:{\n                'x-auth-token': getCurrentAdmin()\n            }\n        });\n}\n\n\nexport function deleteUser(userId){\n    return httpService\n        .delete(userUrl(userId),{\n            headers:{\n                'x-auth-token': getCurrentUser()\n            }\n        });\n}\n\n\nexport function deleteUserAdmin(userId){\n    return httpService\n        .delete(userUrl(userId),{\n            headers:{\n                'x-auth-token': getCurrentAdmin()\n            }\n        });\n}\n","/home/asen/Workspace/momoDesignSite/momo-site/src/services/emailService.js",["302"],"import httpService from \"./httpService\";\nimport {getCurrentAdmin} from \"./adminLoginService\";\nimport {apiUrl} from \"../config.json\";\n\n// const apiEndPoint = apiUrl + \"/emails\";\nconst apiEndPoint = \"/emails\";\n\nfunction emailUrl(id){\n    return `${apiEndPoint}/${id}`;\n}\n\n\nexport function sendEmail(email){\n    return httpService\n        .post(apiEndPoint, email)\n        .then(res => console.log(res.data))\n        .catch(error => console.log(error))\n}\n\nexport function getAllEmails(){\n    return httpService\n        .get(apiEndPoint, {\n            headers: {\n                'x-auth-token': getCurrentAdmin()\n            }\n        });\n}\n\nexport function deleteEmail(emailId){\n    return httpService\n        .delete(emailUrl(emailId),{\n            headers: {\n                'x-auth-token': getCurrentAdmin()\n            }\n        });\n}\n","/home/asen/Workspace/momoDesignSite/momo-site/src/components/product.jsx",["303"],"import React, {Component} from 'react';\nimport Button from \"react-bootstrap/Button\";\n\nclass Product extends Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return (\n            <div>\n                <span>{this.props.product.name}</span>\n                <Button onClick={()=>this.props.onBuy(this.props.product)} disabled={this.props.product.selected}>Buy</Button>\n            </div>\n        );\n    }\n}\n\nexport default Product;\n","/home/asen/Workspace/momoDesignSite/momo-site/src/components/contactsMailForm.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/components/userDeleteAlert.jsx",["304"],"import React, {useState} from 'react';\nimport Alert from 'react-bootstrap/Alert';\nimport Button from \"react-bootstrap/Button\";\nimport \"../css/user/userProfile.css\";\nimport Row from \"react-bootstrap/Row\";\n\n\nfunction UserDeleteAlert(props) {\n\n    return (\n        <React.Fragment>\n            <Alert\n                style={{width: '50vw'}}\n                show={props.showAlert}\n                variant={props.variant}\n                className=\"text-center user-profile-alert\">\n                <Alert.Heading>\n                    {props.heading}\n                </Alert.Heading>\n                <hr/>\n                <Row className=\"justify-content-around\">\n                    <Button\n                        className=\"user-profile-alert-yes\"\n                        onClick={props.onYes}\n                        // variant={props.buttonYesVariant}\n                    >\n                        {props.buttonYes}\n                    </Button>\n                    <Button\n                        className=\"user-profile-alert-no\"\n                        onClick={props.onNo}\n                        // variant={props.buttonNoVariant}\n                    >\n                        {props.buttonNo}\n                    </Button>\n                </Row>\n            </Alert>\n        </React.Fragment>\n    );\n}\n\nexport default UserDeleteAlert;\n","/home/asen/Workspace/momoDesignSite/momo-site/src/components/usercard.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/components/imagesUploadForm.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/admin/emails/allEmailsList.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/components/trTdTable.jsx",[],["305","306"],"/home/asen/Workspace/momoDesignSite/momo-site/src/components/navLinkComp.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/pages/user/updateUserFormUsr.jsx",["307","308"],"/home/asen/Workspace/momoDesignSite/momo-site/src/admin/bios/registerBioForm.jsx",["309","310"],"import React, {Component} from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport Joi from \"joi\";\nimport {toast, Zoom} from \"react-toastify\";\nimport {FormLabel} from \"react-bootstrap\";\nimport CardImg from \"react-bootstrap/CardImg\";\nimport {createBio} from \"../../services/bioService\";\nimport {uploadImageAdmin} from \"../../services/imgService\";\nimport \"../../css/admin/bios/bioRegister.css\";\n\nclass RegisterBioForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bioTitle: '',\n            bioText: '',\n            bioPictures: [],\n            errors: {},\n            isDisabled: true,\n            showPictures: [],\n            uploadPictures: null\n        }\n    }\n\n    schema = Joi.object({\n        bioTitle: Joi.string()\n            .required()\n            .min(5)\n            .max(100)\n            .trim(true)\n            .label('Bio title'),\n        bioText: Joi.string()\n            .required()\n            .min(10)\n            .max(1024)\n            .trim(true)\n            .label('Bio text'),\n        bioPictures: Joi.array()\n            .items(Joi.string().required())\n            .required()\n            .label('Bio pictures')\n    })\n\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n        const errors = this.validateBioInput();\n        this.setState({errors: errors || {}});\n        console.log(errors);\n        if (errors) return;\n\n        const bio = {\n            bioTitle: this.state.bioTitle,\n            bioText: this.state.bioText,\n            bioPictures: this.state.bioPictures\n        }\n        await createBio(bio);\n        toast('New Bio was successfully created!', {\n            position: \"top-center\",\n            transition: Zoom,\n            className: 'register-bio-toaster'\n        });\n\n        if (this.state.uploadPictures !== null) {\n            const data = new FormData();\n            for (let i = 0; i < this.state.uploadPictures.length; i++) {\n                data.append('file', this.state.uploadPictures[i]);\n            }\n            await uploadImageAdmin(data);\n            this.setState({\n                isDisabled: true\n            });\n            toast('Images were successfully uploaded!', {\n                position: \"top-center\",\n                transition: Zoom,\n                className: 'register-bio-toaster'\n            });\n        }\n        console.log(this.state);\n    }\n\n\n    handleImages = (event) => {\n\n        if (this.maxSelectedFiles(event)) {\n            const showFiles = [];\n            const bioFiles = [];\n            for (let i = 0; i < event.target.files.length; i++) {\n                showFiles.push(URL.createObjectURL(event.target.files[i]));\n                bioFiles.push(event.target.files[i].name);\n            }\n            this.setState({\n                bioPictures: bioFiles,\n                showPictures: showFiles,\n                uploadPictures: event.target.files,\n                isDisabled: false\n            });\n        }\n    }\n\n\n    handleChange = (event) => {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name\n\n        this.setState({\n            [name]: value,\n            isDisabled: false\n        });\n    }\n\n\n    maxSelectedFiles = (event) => {\n\n        let files = event.target.files;\n        if (files.length > 3) {\n            toast(\"Only 3 images can be uploaded at a time\", {\n                position: \"top-center\",\n                transition: Zoom,\n                className: 'error-bio-toaster'\n            });\n            event.target.value = null;\n            return false;\n        }\n        return true;\n    }\n\n\n    validateBioInput = () => {\n        const bio = {\n            bioTitle: this.state.bioTitle,\n            bioText: this.state.bioText,\n            bioPictures: this.state.bioPictures\n        };\n        const options = {abortEarly: false};\n        const result = this.schema.validate(bio, options);\n\n        if (!result.error) return null;\n\n        const errors = {};\n        for (let item of result.error.details)\n            errors[item.path[0]] = item.message;\n        return errors;\n    }\n\n\n    adminRedirect = () => {\n        this.props.history.push(\"/admin\");\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Container className=\"register-bio-main-container\" fluid={true}>\n                    <Container className=\"register-bio-sub-container container\" fluid={true}>\n                        <Row className=\"m-0\">\n                            <span className=\"register-bio-span\">Create new Biography :</span>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <div className=\"register-bio-div-form\">\n                                    <Form onSubmit={this.handleSubmit}>\n                                        <Row className=\"justify-content-center\">\n                                            {this.state.showPictures.map(sp => {\n                                                return (\n                                                    <CardImg\n                                                        key={sp}\n                                                        className=\"mt-5 m-3\"\n                                                        style={{width: 300,height:300}}\n                                                        src={sp}/>\n                                                )\n                                            })\n                                            }\n                                        </Row>\n                                        <FormGroup className=\"px-5 pt-5\">\n                                            {/*<FormLabel htmlFor=\"images\">*/}\n                                            {/*    Upload images :*/}\n                                            {/*</FormLabel>*/}\n                                            <Form.File\n                                                className=\"register-bio-form\"\n                                                type=\"file\"\n                                                id=\"images\"\n                                                name=\"images\"\n                                                label={this.state.errors.bioPictures && \"You need to select images to upload!\"\n                                                || \"Maximum images allowed to upload : 3\"}\n                                                multiple\n                                                onChange={this.handleImages}\n                                            />\n                                        </FormGroup>\n                                        <FormGroup className=\"px-5 pt-3\">\n                                            {this.state.errors.bioTitle &&\n                                            <FormLabel className=\"text-danger\">\n                                                {this.state.errors.bioTitle}\n                                            </FormLabel>}\n                                            <FormControl\n                                                className=\"register-bio-form-control\"\n                                                autoFocus={true}\n                                                name=\"bioTitle\"\n                                                type=\"text\"\n                                                value={this.state.bioTitle}\n                                                placeholder=\"Enter title for the Biography\"\n                                                onChange={this.handleChange}/>\n                                        </FormGroup>\n                                        <FormGroup className=\"px-5 pt-2\">\n                                            {this.state.errors.bioText &&\n                                            <FormLabel className=\"text-danger\">\n                                                {this.state.errors.bioText}\n                                            </FormLabel>}\n                                            <FormControl\n                                                className=\"register-bio-form-control\"\n                                                name=\"bioText\"\n                                                as=\"textarea\"\n                                                rows=\"5\"\n                                                value={this.state.bioText}\n                                                placeholder=\"Enter text for the Biography\"\n                                                onChange={this.handleChange}/>\n                                        </FormGroup>\n                                        <Row className=\"px-5 pb-4 py-3 d-flex justify-content-between\">\n                                            <Col md={4}>\n                                                <Button\n                                                    className=\"register-bio-register-button\"\n                                                    type=\"submit\"\n                                                    disabled={this.state.isDisabled}>\n                                                    CREATE BIOGRAPHY\n                                                </Button>\n                                            </Col>\n                                            <Col className=\"d-flex justify-content-end\">\n                                                <Button\n                                                    className=\"register-bio-redirect-button\"\n                                                    onClick={this.adminRedirect}>\n                                                    BACK TO ADMIN PANEL\n                                                </Button>\n                                            </Col>\n                                        </Row>\n                                    </Form>\n\n                                </div>\n                            </Col>\n                        </Row>\n                    </Container>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default RegisterBioForm;\n","/home/asen/Workspace/momoDesignSite/momo-site/src/services/bioService.js",["311"],"import httpService from \"./httpService\";\nimport {getCurrentAdmin} from \"./adminLoginService\";\nimport {apiUrl} from \"../config.json\";\n\n// const apiEndPoint = apiUrl + \"/bios\";\nconst apiEndPoint = \"/bios\";\n\nfunction bioUrl(id) {\n    return `${apiEndPoint}/${id}`;\n}\n\n//Create single Bio object\nexport function createBio(bio) {\n    return httpService\n        .post(apiEndPoint, bio, {\n            headers: {\n                'x-auth-token': getCurrentAdmin()\n            }\n        });\n}\n\n//Get all Bio object from DB\nexport function getBios() {\n    return httpService\n        .get(apiEndPoint);\n}\n\n//Get single Bio object by ID\nexport function getBio(bioId) {\n    return httpService\n        .get(bioUrl(bioId));\n}\n\n//Updating single Bio object\nexport function updateBio(bio, bioId) {\n    const body = {...bio};\n    return httpService\n        .put(bioUrl(bioId), body, {\n            headers: {\n                'x-auth-token': getCurrentAdmin()\n            }\n        });\n}\n\n//Deleting single Bio object\nexport function deleteBio(bioId) {\n    return httpService\n        .delete(bioUrl(bioId), {\n            headers: {\n                'x-auth-token': getCurrentAdmin()\n            }\n        });\n}\n","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/bios/allBiosList.jsx",["312"],"import React, {Component} from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Table from \"react-bootstrap/Table\";\nimport {Button, Image} from \"react-bootstrap\";\nimport {toast, Zoom} from \"react-toastify\";\nimport {Link} from \"react-router-dom\";\nimport {picUrl} from \"../../config.json\";\nimport \"../../css/admin/bios/bioAllList.css\";\nimport {deleteBio, getBios} from \"../../services/bioService\";\nimport {paginateFunction} from \"../../services/paginateFunction\";\nimport Paginate from \"../../components/paginate\";\n\nconst pictureUrl = process.env.REACT_APP_PICTURES_URL;\n\nclass AllBiosList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bios: [],\n            biosPerPage: 3,\n            currentPage: 1\n        }\n    }\n\n    async componentDidMount() {\n        const {data: bios} = await getBios();\n        this.setState({bios});\n        console.log(this.state.bios);\n    }\n\n\n    handleDelete = async (bio) => {\n        const allBios = this.state.bios;\n        const bios = allBios.filter(b => b._id !== bio._id);\n        this.setState({bios});\n\n        try {\n            toast(`Bio : ${bio.bioTitle} was successfully deleted!`, {\n                position: \"top-center\",\n                transition: Zoom,\n                className: 'biolist-toaster'\n            });\n            await deleteBio(bio._id);\n        } catch (e) {\n            if (e.response && e.response.status === 404) console.log(\"Bio with the given ID was not found!\");\n            toast.error(\"This Bio has already been deleted!\");\n            this.setState({bios: allBios});\n        }\n    }\n\n    handlePageChange = (pageNumber) => {\n        this.setState({currentPage: pageNumber});\n    }\n\n    adminRedirect = () => {\n        this.props.history.push(\"/admin\");\n    }\n\n    render() {\n\n        const paginatedBios = paginateFunction(this.state.bios, this.state.biosPerPage,this.state.currentPage);\n\n        return (\n            <div>\n                <Container className=\"biolist-main-container\" fluid={true}>\n                    <Container className=\"biolist-sub-container container\" fluid={true}>\n                        <Row className=\"m-0\">\n                            <Col className=\"biolist-span-col\">\n                            <span className=\"biolist-span\">All created Biographies :</span>\n                            </Col>\n                            <Col className=\"biolist-span-col d-flex justify-content-end\">\n                                <Paginate\n                                    className=\"m-0\"\n                                    itemsCount={this.state.bios.length}\n                                    itemsPerPage={this.state.biosPerPage}\n                                    currentPage={this.state.currentPage}\n                                    onPageChange={this.handlePageChange}/>\n                            </Col>\n                        </Row>\n                        <Table responsive hover className=\"biolist-table\">\n                            <thead className=\"biolist-thead\">\n                            <tr>\n                                <th>Title</th>\n                                <th>Text</th>\n                                <th>Pictures</th>\n                                <th>Update</th>\n                                <th>Delete</th>\n                            </tr>\n                            </thead>\n                            <tbody className=\"biolist-tbody\">\n                            {paginatedBios.map(bio => {\n                                return (\n                                    <tr key={bio._id}>\n                                        <td>{bio.bioTitle}</td>\n                                        <td>\n                                            <div\n                                                className=\"overflow-auto\"\n                                                style={{height: 150}}>\n                                                {bio.bioText}\n                                            </div>\n                                        </td>\n                                        <td>\n                                            <Row className=\"justify-content-center\">\n                                                {bio.bioPictures.map(bp => {\n                                                    return (\n                                                        <Image\n                                                            src={pictureUrl + bp}\n                                                            width=\"70\"\n                                                            height=\"70\"\n                                                            className=\"m-1\"/>\n                                                    )\n                                                })}\n                                            </Row>\n                                        </td>\n                                        <td>\n                                            <Link\n                                                className=\"biolist-link\"\n                                                to={`/admin/bioslist/${bio._id}`}>\n                                                Update\n                                            </Link>\n                                        </td>\n                                        <td>\n                                            <Button\n                                                className=\"biolist-delete-button\"\n                                                onClick={() => this.handleDelete(bio)}>\n                                                Delete\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                )\n                            })}\n                            </tbody>\n                        </Table>\n                        <Button\n                            className=\"biolist-redirect-button\"\n                            onClick={this.adminRedirect}>\n                            BACK TO ADMIN PANEL\n                        </Button>\n                    </Container>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default AllBiosList;\n","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/bios/updateBioForm.jsx",["313"],"/home/asen/Workspace/momoDesignSite/momo-site/src/admin/blogs/registerBlogForm.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/services/blogService.js",["314"],"import httpService from \"./httpService\";\nimport {getCurrentAdmin} from \"./adminLoginService\";\nimport {apiUrl} from \"../config.json\";\n\n// const apiEndPoint = apiUrl + \"/blogs\";\nconst apiEndPoint = \"/blogs\";\n\nfunction blogUrl(id) {\n    return `${apiEndPoint}/${id}`;\n}\n\n//Create single Blog object\nexport function createBlog(blog) {\n    return httpService\n        .post(apiEndPoint, blog, {\n            headers: {\n                'x-auth-token': getCurrentAdmin()\n            }\n        });\n}\n\n//Retrieving all the Blogs from Db\nexport function getBlogs() {\n    return httpService\n        .get(apiEndPoint);\n}\n\n//Retrieving single Blog object from the Db\nexport function getBlog(blogId) {\n    return httpService\n        .get(blogUrl(blogId));\n}\n\n//Updating single Blog object\nexport function updateBlog(blog, blogId) {\n    const body = {...blog};\n    return httpService\n        .put(blogUrl(blogId), body,{\n            headers: {\n                'x-auth-token': getCurrentAdmin()\n            }\n        });\n}\n\n//Deleting single Blog object\nexport function deleteBlog(blogId) {\n    return httpService\n        .delete(blogUrl(blogId), {\n            headers: {\n                'x-auth-token': getCurrentAdmin()\n            }\n        });\n}\n","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/blogs/allBlogsList.jsx",["315"],"/home/asen/Workspace/momoDesignSite/momo-site/src/admin/blogs/updateBlogForm.jsx",["316"],"/home/asen/Workspace/momoDesignSite/momo-site/src/pages/blog/blog.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/pages/blog/blogDetails.jsx",["317","318"],"/home/asen/Workspace/momoDesignSite/momo-site/src/services/commentService.js",["319"],"import httpService from \"./httpService\";\nimport {getCurrentAdmin} from \"./adminLoginService\";\nimport {getCurrentUser} from \"./userLoginService\";\nimport {apiUrl} from \"../config.json\";\n\n// const apiEndPoint = apiUrl + \"/comments\";\n// const apiBlogEndPoint = apiUrl + \"/comments/by-blog\";\n// const apiUserEndPoint = apiUrl + \"/comments/by-user\";\n\nconst apiEndPoint = \"/comments\";\nconst apiBlogEndPoint = \"/comments/by-blog\";\nconst apiUserEndPoint = \"/comments/by-user\";\n\nfunction commentUrl(id) {\n    return `${apiEndPoint}/${id}`;\n}\n\nfunction byBlogUrl(id) {\n    return `${apiBlogEndPoint}/${id}`;\n}\n\nfunction byUserUrl(id) {\n    return `${apiUserEndPoint}/${id}`;\n}\n\n\n//Create single Comment\nexport function createComment(comment) {\n    return httpService\n        .post(apiEndPoint, comment, {\n            headers: {\n                'x-auth-token': getCurrentUser()\n            }\n        });\n}\n\n//Get all Comments (For Admin only!)\nexport function getComments() {\n    return httpService\n        .get(apiEndPoint, {\n            headers: {\n                'x-auth-token': getCurrentAdmin()\n            }\n        });\n}\n\n//Get single Comment\nexport function getComment(commentId) {\n    return httpService\n        .get(commentUrl(commentId));\n}\n\n//Get all Comments for a Blog by ID\nexport function getCommentsByBlog(blogId) {\n    return httpService\n        .get(byBlogUrl(blogId));\n}\n\n//Get all Comments for a User by ID (For auth user only!)\nexport function getCommentsByUser(userId) {\n    return httpService\n        .get(byUserUrl(userId), {\n            headers: {\n                'x-auth-token': getCurrentUser()\n            }\n        })\n}\n\n//Deleting single Comment\nexport function deleteComment(commentId){\n    return httpService\n        .delete(commentUrl(commentId),{\n            headers: {\n                'x-auth-token': getCurrentAdmin()\n            }\n        })\n}\n","/home/asen/Workspace/momoDesignSite/momo-site/src/components/blogCard.jsx",["320"],"/home/asen/Workspace/momoDesignSite/momo-site/src/components/blogComments.jsx",["321"],"/home/asen/Workspace/momoDesignSite/momo-site/src/admin/comments/AllCommentsList.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/admin/designs/registerDesignForm.jsx",["322","323"],"import React, {Component} from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport Joi from \"joi\";\nimport {toast, Zoom} from \"react-toastify\";\nimport {FormLabel} from \"react-bootstrap\";\nimport CardImg from \"react-bootstrap/CardImg\";\nimport {uploadImageAdmin} from \"../../services/imgService\";\nimport {createDesign} from \"../../services/designService\";\nimport \"../../css/admin/designs/designRegister.css\"\n\nconst designTypes = [\n    {_id: 1, type: 'photography'},\n    {_id: 2, type: 'graphic design'},\n    {_id: 3, type: 'prepress'}\n];\n\nclass RegisterDesignForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            designTitle: '',\n            designText: '',\n            designPictures: '',\n            designType: '',\n            errors: {},\n            isDisabled: true,\n            showPictures: [],\n            uploadPictures: null\n        }\n    }\n\n    schema = Joi.object({\n        designTitle: Joi.string()\n            .required()\n            .min(5)\n            .max(100)\n            .trim(true)\n            .label('Design title'),\n        designText: Joi.string()\n            .allow('')\n            .min(10)\n            .max(200)\n            .trim(true)\n            .label('Design text'),\n        designPictures: Joi.array()\n            .items(Joi.string().required())\n            .required()\n            .label('Design pictures'),\n        designType: Joi.string()\n            .required()\n            .min(3)\n            .max(30)\n            .label('Design type')\n    })\n\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n        const errors = this.validateDesignInput();\n        this.setState({\n            errors: errors || {}\n        });\n        console.log(errors);\n        if (errors) return;\n\n        if (this.state.uploadPictures !== null) {\n            const data = new FormData();\n            for (let i = 0; i < this.state.uploadPictures.length; i++) {\n                data.append('file', this.state.uploadPictures[i]);\n            }\n            await uploadImageAdmin(data);\n            toast('Images were successfully uploaded!', {\n                position: \"top-center\",\n                transition: Zoom,\n                className: 'register-design-toaster'\n            });\n        }\n\n        const design = {\n            designTitle: this.state.designTitle,\n            designText: this.state.designText,\n            designPictures: this.state.designPictures,\n            designType: this.state.designType\n        }\n        await createDesign(design);\n        toast('New Design was successfully created!', {\n            position: \"top-center\",\n            transition: Zoom,\n            className: 'register-design-toaster'\n        });\n\n        this.setState({\n            isDisabled: true\n        });\n    }\n\n\n    handleImages = (event) => {\n\n        if (this.maxSelectedFiles(event)) {\n            const designFiles = [];\n            const showFiles = [];\n            for (let i = 0; i < event.target.files.length; i++) {\n                designFiles.push(event.target.files[i].name);\n                showFiles.push(URL.createObjectURL(event.target.files[i]));\n            }\n            this.setState({\n                designPictures: designFiles,\n                showPictures: showFiles,\n                uploadPictures: event.target.files,\n                isDisabled: false\n            });\n        }\n    }\n\n\n    handleChange = (event) => {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value,\n            isDisabled: false\n        })\n    }\n\n\n    maxSelectedFiles = (event) => {\n        let files = event.target.files;\n        if (files.length > 20) {\n            toast('Only 20 images can be uploaded!', {\n                position: \"top-center\",\n                transition: Zoom,\n                className: 'error-design-toaster'\n            });\n            event.target.value = null;\n            return false;\n        }\n        return true;\n    }\n\n    validateDesignInput = () => {\n        const design = {\n            designTitle: this.state.designTitle,\n            designText: this.state.designText,\n            designPictures: this.state.designPictures,\n            designType: this.state.designType\n        };\n        const options = {abortEarly: false};\n        const result = this.schema.validate(design, options);\n\n        if (!result.error) return null;\n\n        const errors = {};\n        for (let item of result.error.details)\n            errors[item.path[0]] = item.message;\n        return errors;\n    }\n\n\n    adminRedirect = () => {\n        this.props.history.push(\"/admin\");\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Container className=\"register-design-main-container\" fluid={true}>\n                    <Container className=\"register-design-sub-container container\">\n                        <Row className=\"m-0\">\n                            <span className=\"register-design-span\">Create new Design :</span>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <div className=\"register-design-div-form\">\n                                    <Form onSubmit={this.handleSubmit}>\n\n                                        <Row className=\"justify-content-center\">\n                                            {this.state.showPictures.map(sp => {\n                                                return (\n                                                    <CardImg\n                                                        key={sp}\n                                                        className=\"mt-5 m-3\"\n                                                        style={{width: 300, height: 300}}\n                                                        src={sp}/>\n                                                )\n                                            })}\n                                        </Row>\n                                        <Row className=\"m-0\">\n                                        <FormGroup className=\"px-5 pt-5\" as={Col}>\n                                            <Form.File\n                                                className=\"register-design-form\"\n                                                type=\"file\"\n                                                id=\"images\"\n                                                name=\"images\"\n                                                label={this.state.errors.designPictures && \"You need to select images to upload!\"\n                                                || \"Maximum images allowed to upload : 20\"}\n                                                multiple\n                                                onChange={this.handleImages}/>\n                                        </FormGroup>\n\n                                        <FormGroup className=\"px-5 pt-5\" as={Col}>\n                                            <FormControl\n                                                className=\"register-design-form-control-option\"\n                                                name=\"designType\"\n                                                as=\"select\"\n                                                onChange={this.handleChange}>\n                                                <option\n                                                    className=\"register-design-option\">\n                                                    Choose design type...\n                                                </option>\n                                                {designTypes.map(des => {\n                                                    return (\n                                                        <option\n                                                            className=\"register-design-option\"\n                                                            key={des._id}\n                                                            value={des.type}>\n                                                            {des.type}\n                                                        </option>\n                                                    )\n                                                })}\n                                            </FormControl>\n                                            {this.state.errors.designType &&\n                                            <FormLabel className=\"text-danger pt-3\">\n                                                {this.state.errors.designType}\n                                            </FormLabel>\n                                            }\n                                        </FormGroup>\n                                        </Row>\n                                        <FormGroup className=\"px-5 pt-3\">\n                                            {this.state.errors.designTitle &&\n                                            <FormLabel className=\"text-danger\">\n                                                {this.state.errors.designTitle}\n                                            </FormLabel>\n                                            }\n                                            <FormControl\n                                                className=\"register-design-form-control\"\n                                                autoFocus={true}\n                                                name=\"designTitle\"\n                                                type=\"text\"\n                                                value={this.state.designTitle}\n                                                placeholder=\"Enter title for the Design\"\n                                                onChange={this.handleChange}/>\n                                        </FormGroup>\n                                        <FormGroup className=\"px-5 pt-2\">\n                                            {this.state.errors.designText &&\n                                            <FormLabel className=\"text-danger\">\n                                                {this.state.errors.designText}\n                                            </FormLabel>\n                                            }\n                                            <FormControl\n                                                className=\"register-design-form-control\"\n                                                name=\"designText\"\n                                                as=\"textarea\"\n                                                rows=\"3\"\n                                                value={this.state.designText}\n                                                placeholder=\"Enter text for the Design (not mandatory)\"\n                                                onChange={this.handleChange}/>\n                                        </FormGroup>\n                                        <Row className=\"px-5 pb-4 py-3 d-flex justify-content-between\">\n                                            <Col md={4}>\n                                                <Button\n                                                    className=\"register-design-register-button\"\n                                                    type=\"submit\"\n                                                    disabled={this.state.isDisabled}>\n                                                    CREATE DESIGN\n                                                </Button>\n                                            </Col>\n                                            <Col className=\"d-flex justify-content-end\">\n                                                <Button\n                                                    className=\"register-design-redirect-button\"\n                                                    onClick={this.adminRedirect}>\n                                                    BACK TO ADMIN PANEL\n                                                </Button>\n                                            </Col>\n                                        </Row>\n                                    </Form>\n                                </div>\n                            </Col>\n                        </Row>\n                    </Container>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default RegisterDesignForm;\n","/home/asen/Workspace/momoDesignSite/momo-site/src/services/designService.js",["324"],"import httpService from \"./httpService\";\nimport {getCurrentAdmin} from \"./adminLoginService\";\nimport {apiUrl} from \"../config.json\";\n\n// const apiEndPoint = apiUrl + \"/designs\";\nconst apiEndPoint = \"/designs\";\n\nfunction designUrl(id){\n    return `${apiEndPoint}/${id}`;\n}\n\n//Create single design object\nexport function createDesign(design){\n    return httpService\n        .post(apiEndPoint,design,{\n            headers: {\n                'x-auth-token': getCurrentAdmin()\n            }\n        });\n}\n\n//Retireve all Designs\nexport function getDesigns(){\n    return httpService\n        .get(apiEndPoint);\n}\n\n//Retireving single Design object\nexport function getDesign(designId){\n    return httpService\n        .get(designUrl(designId));\n}\n\n//Updating single Design object\nexport function updateDesign(design,designId){\n    const body = {...design}\n    return httpService\n        .put(designUrl(designId),body,{\n            headers: {\n                'x-auth-token':getCurrentAdmin()\n            }\n        });\n}\n\n//Deleting single Design object\nexport function deleteDesign(designId){\n    return httpService\n        .delete(designUrl(designId),{\n            headers: {\n                'x-auth-token': getCurrentAdmin()\n            }\n        });\n}\n","/home/asen/Workspace/momoDesignSite/momo-site/src/admin/designs/allDesignsList.jsx",["325"],"/home/asen/Workspace/momoDesignSite/momo-site/src/admin/designs/updateDesignForm.jsx",["326"],"/home/asen/Workspace/momoDesignSite/momo-site/src/services/paginateFunction.js",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/components/paginate.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/components/footer.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/components/DropDownComments.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/components/DropDownDesigns.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/pages/biography/biography.jsx",["327","328","329","330"],"/home/asen/Workspace/momoDesignSite/momo-site/src/pages/designs/designs.jsx",["331"],"/home/asen/Workspace/momoDesignSite/momo-site/src/pages/designs/designsDetails.jsx",["332"],"/home/asen/Workspace/momoDesignSite/momo-site/src/components/listGroupDesigns.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/pages/homepage/homepage.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/components/homepageCards.jsx",[],"/home/asen/Workspace/momoDesignSite/momo-site/src/components/scrollToTop.jsx",[],{"ruleId":"333","replacedBy":"334"},{"ruleId":"335","replacedBy":"336"},{"ruleId":"337","severity":1,"message":"338","line":2,"column":9,"nodeType":"339","messageId":"340","endLine":2,"endColumn":15},{"ruleId":"337","severity":1,"message":"338","line":2,"column":9,"nodeType":"339","messageId":"340","endLine":2,"endColumn":15},{"ruleId":"337","severity":1,"message":"341","line":11,"column":9,"nodeType":"339","messageId":"340","endLine":11,"endColumn":15},{"ruleId":"342","severity":1,"message":"343","line":194,"column":90,"nodeType":"344","messageId":"345","endLine":194,"endColumn":92},{"ruleId":"342","severity":1,"message":"343","line":195,"column":53,"nodeType":"344","messageId":"345","endLine":195,"endColumn":55},{"ruleId":"337","severity":1,"message":"341","line":8,"column":9,"nodeType":"339","messageId":"340","endLine":8,"endColumn":15},{"ruleId":"346","severity":1,"message":"347","line":59,"column":9,"nodeType":"348","messageId":"349","endLine":59,"endColumn":21,"fix":"350"},{"ruleId":"337","severity":1,"message":"351","line":9,"column":36,"nodeType":"339","messageId":"340","endLine":9,"endColumn":47},{"ruleId":"337","severity":1,"message":"341","line":6,"column":9,"nodeType":"339","messageId":"340","endLine":6,"endColumn":15},{"ruleId":"337","severity":1,"message":"352","line":11,"column":20,"nodeType":"339","messageId":"340","endLine":11,"endColumn":25},{"ruleId":"337","severity":1,"message":"341","line":12,"column":9,"nodeType":"339","messageId":"340","endLine":12,"endColumn":15},{"ruleId":"342","severity":1,"message":"343","line":198,"column":94,"nodeType":"344","messageId":"345","endLine":198,"endColumn":96},{"ruleId":"342","severity":1,"message":"343","line":199,"column":57,"nodeType":"344","messageId":"345","endLine":199,"endColumn":59},{"ruleId":"353","severity":1,"message":"354","line":27,"column":1,"nodeType":"355","endLine":32,"endColumn":3},{"ruleId":"337","severity":1,"message":"338","line":3,"column":9,"nodeType":"339","messageId":"340","endLine":3,"endColumn":15},{"ruleId":"337","severity":1,"message":"338","line":3,"column":9,"nodeType":"339","messageId":"340","endLine":3,"endColumn":15},{"ruleId":"337","severity":1,"message":"338","line":4,"column":9,"nodeType":"339","messageId":"340","endLine":4,"endColumn":15},{"ruleId":"337","severity":1,"message":"338","line":3,"column":9,"nodeType":"339","messageId":"340","endLine":3,"endColumn":15},{"ruleId":"356","severity":1,"message":"357","line":5,"column":5,"nodeType":"358","messageId":"359","endLine":7,"endColumn":6},{"ruleId":"337","severity":1,"message":"360","line":1,"column":16,"nodeType":"339","messageId":"340","endLine":1,"endColumn":24},{"ruleId":"333","replacedBy":"361"},{"ruleId":"335","replacedBy":"362"},{"ruleId":"337","severity":1,"message":"352","line":13,"column":20,"nodeType":"339","messageId":"340","endLine":13,"endColumn":25},{"ruleId":"337","severity":1,"message":"341","line":14,"column":9,"nodeType":"339","messageId":"340","endLine":14,"endColumn":15},{"ruleId":"342","severity":1,"message":"343","line":192,"column":86,"nodeType":"344","messageId":"345","endLine":192,"endColumn":88},{"ruleId":"342","severity":1,"message":"343","line":193,"column":49,"nodeType":"344","messageId":"345","endLine":193,"endColumn":51},{"ruleId":"337","severity":1,"message":"338","line":3,"column":9,"nodeType":"339","messageId":"340","endLine":3,"endColumn":15},{"ruleId":"337","severity":1,"message":"341","line":9,"column":9,"nodeType":"339","messageId":"340","endLine":9,"endColumn":15},{"ruleId":"337","severity":1,"message":"341","line":13,"column":9,"nodeType":"339","messageId":"340","endLine":13,"endColumn":15},{"ruleId":"337","severity":1,"message":"338","line":3,"column":9,"nodeType":"339","messageId":"340","endLine":3,"endColumn":15},{"ruleId":"337","severity":1,"message":"341","line":9,"column":9,"nodeType":"339","messageId":"340","endLine":9,"endColumn":15},{"ruleId":"337","severity":1,"message":"341","line":13,"column":9,"nodeType":"339","messageId":"340","endLine":13,"endColumn":15},{"ruleId":"337","severity":1,"message":"341","line":13,"column":9,"nodeType":"339","messageId":"340","endLine":13,"endColumn":15},{"ruleId":"346","severity":1,"message":"347","line":109,"column":9,"nodeType":"348","messageId":"349","endLine":109,"endColumn":23,"fix":"363"},{"ruleId":"337","severity":1,"message":"338","line":4,"column":9,"nodeType":"339","messageId":"340","endLine":4,"endColumn":15},{"ruleId":"337","severity":1,"message":"341","line":6,"column":9,"nodeType":"339","messageId":"340","endLine":6,"endColumn":15},{"ruleId":"337","severity":1,"message":"341","line":4,"column":9,"nodeType":"339","messageId":"340","endLine":4,"endColumn":15},{"ruleId":"342","severity":1,"message":"343","line":204,"column":89,"nodeType":"344","messageId":"345","endLine":204,"endColumn":91},{"ruleId":"342","severity":1,"message":"343","line":205,"column":49,"nodeType":"344","messageId":"345","endLine":205,"endColumn":51},{"ruleId":"337","severity":1,"message":"338","line":3,"column":9,"nodeType":"339","messageId":"340","endLine":3,"endColumn":15},{"ruleId":"337","severity":1,"message":"341","line":9,"column":9,"nodeType":"339","messageId":"340","endLine":9,"endColumn":15},{"ruleId":"337","severity":1,"message":"341","line":13,"column":9,"nodeType":"339","messageId":"340","endLine":13,"endColumn":15},{"ruleId":"337","severity":1,"message":"341","line":8,"column":9,"nodeType":"339","messageId":"340","endLine":8,"endColumn":15},{"ruleId":"364","severity":1,"message":"365","line":40,"column":51,"nodeType":"366","messageId":"367","endLine":40,"endColumn":53},{"ruleId":"368","severity":1,"message":"369","line":41,"column":35,"nodeType":"370","messageId":"371","endLine":41,"endColumn":37},{"ruleId":"368","severity":1,"message":"369","line":62,"column":42,"nodeType":"370","messageId":"371","endLine":62,"endColumn":44},{"ruleId":"337","severity":1,"message":"341","line":9,"column":9,"nodeType":"339","messageId":"340","endLine":9,"endColumn":15},{"ruleId":"337","severity":1,"message":"341","line":6,"column":9,"nodeType":"339","messageId":"340","endLine":6,"endColumn":15},"no-native-reassign",["372"],"no-negated-in-lhs",["373"],"no-unused-vars","'apiUrl' is defined but never used.","Identifier","unusedVar","'picUrl' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","no-whitespace-before-property","Unexpected whitespace before property name.","MemberExpression","unexpectedWhitespace",{"range":"374","text":"375"},"'loggedAdmin' is defined but never used.","'Image' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'useState' is defined but never used.",["372"],["373"],{"range":"376","text":"375"},"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",[1752,1753],"",[3301,3302]]